{"version":3,"sources":["reportWebVitals.js","view/icon/Icon.jsx","model/runner/rest.js","view/Login.jsx","view/layout/menuType.js","view/layout/Sider.jsx","view/layout/Header.jsx","view/dashboard/Dashboard.jsx","component/paginationSetting.js","model/api/supplier.js","view/supplier/Supplier.jsx","component/FormItem.jsx","view/supplier/supplierType.js","view/supplier/SupplierForm.jsx","view/supplier/SupplierDetail.jsx","model/api/customer.js","view/customer/Customer.jsx","view/customer/customerType.js","view/customer/CustomerForm.jsx","view/customer/CustomerDetail.jsx","model/api/employee.js","view/employee/Employee.jsx","view/employee/employeeType.js","view/employee/EmployeeForm.jsx","view/employee/EmployeeDetail.jsx","model/api/vehicle.js","view/vehicle/Vehicle.jsx","view/vehicle/vehicleType.js","view/vehicle/VehicleForm.jsx","view/vehicle/VehicleDetail.jsx","model/api/level.js","view/level/Level.jsx","view/level/levelType.js","view/level/LevelForm.jsx","view/level/LevelDetail.jsx","model/api/colour.js","view/colour/Colour.jsx","view/colour/colourType.js","view/colour/ColourForm.jsx","view/colour/ColourDetail.jsx","model/api/component.js","view/component/Component.jsx","view/component/componentType.js","view/component/ComponentForm.jsx","view/component/ComponentDetail.jsx","component/PageDrawer.jsx","model/storage/static.js","view/product/productType.js","model/api/product.js","view/product/ProductForm.jsx","view/product/ProductDetail.jsx","view/product/Product.jsx","model/api/global.js","view/LayoutPage.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ListDeleteSvg","height","viewBox","width","fill","d","ListDeleteIcon","props","Icon","component","ListEditSvg","ListEditIcon","ListSearchSvg","ListSearchIcon","ListAddSvg","ListAddIcon","HeaderNotifyEmptySvg","HeaderNotifyEmptyIcon","HeaderLogoutSvg","enableBackground","HeaderLogoutIcon","HeaderAccountSvg","HeaderAccountIcon","SiderMenuProductSvg","SiderMenuProductIcon","SiderMenuWidgetSvg","SiderMenuWidgetIcon","SiderMenuBasicSvg","SiderMenuBasicIcon","SiderMenuDashboardSvg","x","y","SiderMenuDashboardIcon","SiderSwitchSvg","SiderSwitchIcon","LoginPasswordOffSvg","LoginPasswordOffIcon","LoginPasswordOnSvg","LoginPasswordOnIcon","LoginPasswordSvg","LoginPasswordIcon","LoginAccountSvg","LoginAccountIcon","UtilCloseSvg","UtilCloseIcon","baseUrl","process","getAuth","auth","document","cookie","split","find","includes","restInstance","method","requestUrl","data","config","url","timeout","headers","Authorization","Object","keys","length","params","Promise","resolve","reject","axios","response","catch","error","console","log","Login","cookies","keepLogin","useState","isLogin","setIsLogin","userId","password","loginData","setLoginData","useEffect","title","createHashHistory","replace","onInputChange","key","e","target","value","className","placeholder","prefix","onChange","Password","iconRender","visible","defaultChecked","checked","onClick","restInstanceWithoutAuth","code","message","success","Buffer","toString","localStorage","setItem","JSON","stringify","authorities","map","role","authority","setTimeout","onLogin","loading","routes","path","menuType","icon","accessRoles","children","LayoutSider","selectedKeys","setSelectedKeys","changeTitle","match","unlisten","history","listen","location","pathname","undefined","page","type","route","RegExp","test","to","item","join","push","menu","roles","parse","getItem","filter","SubMenu","popupClassName","Item","LayoutHeader","Search","enterButton","onLogout","Dashboard","getPaginationSetting","pager","showTotal","total","range","showSizeChanger","showQuickJumper","SupplierAPI","getSupplierList","getSupplierData","vendorId","addSupplierData","updateSupplierData","Supplier","supplierAPI","getList","state","search","pagination","requestData","pageNum","current","pageSize","queryByEnum","id","queryKeyWord","keyword","setState","list","onSelectChange","handleSearch","getColumns","_this","dataIndex","render","size","onEdit","bind","handleDelete","align","a","b","i","Modal","confirm","ExclamationCircleOutlined","okText","cancelText","onOk","onPageChange","position","justify","this","Option","allowClear","rowKey","columns","dataSource","React","Component","FormItem","required","content","style","display","alignItems","marginRight","textAlign","Text","color","left","top","fontSize","initData","name","shortName","principal","contactPerson","postCode","address","phone1","phone2","faxNumber","cellPhone","note1","note2","formRules","SupplierForm","formData","checkCanSubmit","getFormErrorStatus","field","formStatus","event","getAttribute","text","toUpperCase","checkData","fieldKey","regExp","canSubmit","forEach","handleCreate","back","getElementById","scrollTo","behavior","handleSubmit","tip","index","handleCancel","createFlag","prevProps","rowSetting","gutter","marginBottom","marginTop","colSetting","xs","sm","md","lg","spinning","disabled","span","TextArea","autoSize","minRows","maxRows","margin","CheckOutlined","danger","CloseOutlined","SupplierDetail","CustomerAPI","getCustomerList","getCustomerData","customerId","addCustomerData","updateCustomerData","Customer","customerAPI","CustomerForm","some","CustomerDetail","EmployeeAPI","getEmployeeList","getEmployeeData","employeeId","addEmployeeData","updateEmployeeData","employeeAPI","identityCardNumber","birthday","phone","takeOfficeDay","education","experience","note","salary","extraBonus","fullAttendanceBonus","EmployeeForm","moment","valueOf","onDateChange","date","onNumberChange","format","min","max","step","EmployeeDetail","VehicleAPI","getVehicleList","getVehicleData","kindId","addVehicleData","updateVehicleData","Vehicle","vehicleAPI","kindIdLike","factory","VehicleForm","VehicleDetail","LevelAPI","getLevelList","getLevelData","gradeId","addLevelData","updateLevelData","Level","levelAPI","LevelForm","LevelDetail","ColourAPI","getColourList","getColourData","colorId","addColourData","updateColourData","Colour","colourAPI","ColourForm","ColourDetail","ComponentAPI","getComponentList","getComponentData","partId","addComponentData","updateComponentData","componentAPI","ComponentForm","ComponentDetail","PageDrawer","StaticStorage","setRoles","setUnitList","unitList","seqNo","productId","productType","customCode1","customCode2","customCode3","kindShortName","unit","StatisStorage","price1","price2","price3","norm","vendorProductId","safetyStock","inventory","storingPlace","ProductAPI","getProductList","getProductType","getProductData","addProductData","updateProductData","getPartsList","getKindsList","getGradesList","getColorsList","ProductForm","productAPI","getInitData","partsList","kindsList","gradesList","colorsList","isDrawMode","onClose","onCodeSearch","onCodeSelect","kind","toLowerCase","getPartOptions","part","label","getKindOptions","kinds","unshift","getGradeOptions","grades","grade","getColorOptions","colors","drawerContent","querySelector","layoutContent","drawModeVisible","colSetting1","colSetting2","colSetting3","codeColSetting","desc","searchValue","showSearch","showArrow","options","onSearch","onSelect","notFoundContent","optionFilterProp","ProductDetail","Product","onDetailOpen","detailCreate","detailSeqNo","detailVisible","onDetailClose","placement","closeIcon","GlobalAPI","getUnitList","LayoutPage","staticStorage","globalAPI","getGlobalData","clearCookie","isAuth","isLand","siderCollapsed","testRestInstance","window","addEventListener","locale","zhTW","Sider","collapsible","collapsed","onCollapse","trigger","Header","Content","exact","Employee","Footer","ReactDOM"],"mappings":"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","file":"static/js/main.532242d6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport Icon from '@ant-design/icons'\n\nconst ListDeleteSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z' />\n  </svg>\n)\nexport const ListDeleteIcon = (props) => <Icon component={ListDeleteSvg} {...props} />\nconst ListEditSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z' />\n  </svg>\n)\nexport const ListEditIcon = (props) => <Icon component={ListEditSvg} {...props} />\nconst ListSearchSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' />\n  </svg>\n)\nexport const ListSearchIcon = (props) => <Icon component={ListSearchSvg} {...props} />\nconst ListAddSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' />\n  </svg>\n)\nexport const ListAddIcon = (props) => <Icon component={ListAddSvg} {...props} />\n\nconst HeaderNotifyExistSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zM7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42z' />\n  </svg>\n)\nexport const HeaderNotifyExistIcon = (props) => <Icon component={HeaderNotifyExistSvg} {...props} />\nconst HeaderNotifyEmptySvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z' />\n  </svg>\n)\nexport const HeaderNotifyEmptyIcon = (props) => <Icon component={HeaderNotifyEmptySvg} {...props} />\nconst HeaderLogoutSvg = () => (\n  <svg\n    enableBackground='new 0 0 24 24'\n    height='36px'\n    viewBox='0 0 24 24'\n    width='36px'\n    fill='#ffffff'\n  >\n    <g>\n      <path d='M0,0h24v24H0V0z' fill='none' />\n    </g>\n    <g>\n      <path d='M17,8l-1.41,1.41L17.17,11H9v2h8.17l-1.58,1.58L17,16l4-4L17,8z M5,5h7V3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h7v-2H5V5z' />\n    </g>\n  </svg>\n)\nexport const HeaderLogoutIcon = (props) => <Icon component={HeaderLogoutSvg} {...props} />\nconst HeaderAccountSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z' />\n  </svg>\n)\nexport const HeaderAccountIcon = (props) => <Icon component={HeaderAccountSvg} {...props} />\n\nconst SiderMenuProductSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M12 2l-5.5 9h11L12 2zm0 3.84L13.93 9h-3.87L12 5.84zM17.5 13c-2.49 0-4.5 2.01-4.5 4.5s2.01 4.5 4.5 4.5 4.5-2.01 4.5-4.5-2.01-4.5-4.5-4.5zm0 7c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM3 21.5h8v-8H3v8zm2-6h4v4H5v-4z' />\n  </svg>\n)\nexport const SiderMenuProductIcon = (props) => <Icon component={SiderMenuProductSvg} {...props} />\nconst SiderMenuWidgetSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M16.66 4.52l2.83 2.83-2.83 2.83-2.83-2.83 2.83-2.83M9 5v4H5V5h4m10 10v4h-4v-4h4M9 15v4H5v-4h4m7.66-13.31L11 7.34 16.66 13l5.66-5.66-5.66-5.65zM11 3H3v8h8V3zm10 10h-8v8h8v-8zm-10 0H3v8h8v-8z' />\n  </svg>\n)\nexport const SiderMenuWidgetIcon = (props) => <Icon component={SiderMenuWidgetSvg} {...props} />\nconst SiderMenuBasicSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M9 13.75c-2.34 0-7 1.17-7 3.5V19h14v-1.75c0-2.33-4.66-3.5-7-3.5zM4.34 17c.84-.58 2.87-1.25 4.66-1.25s3.82.67 4.66 1.25H4.34zM9 12c1.93 0 3.5-1.57 3.5-3.5S10.93 5 9 5 5.5 6.57 5.5 8.5 7.07 12 9 12zm0-5c.83 0 1.5.67 1.5 1.5S9.83 10 9 10s-1.5-.67-1.5-1.5S8.17 7 9 7zm7.04 6.81c1.16.84 1.96 1.96 1.96 3.44V19h4v-1.75c0-2.02-3.5-3.17-5.96-3.44zM15 12c1.93 0 3.5-1.57 3.5-3.5S16.93 5 15 5c-.54 0-1.04.13-1.5.35.63.89 1 1.98 1 3.15s-.37 2.26-1 3.15c.46.22.96.35 1.5.35z' />\n  </svg>\n)\nexport const SiderMenuBasicIcon = (props) => <Icon component={SiderMenuBasicSvg} {...props} />\nconst SiderMenuDashboardSvg = () => (\n  <svg\n    enableBackground='new 0 0 24 24'\n    height='36px'\n    viewBox='0 0 24 24'\n    width='36px'\n    fill='#000000'\n  >\n    <g>\n      <rect fill='none' height='24' width='24' />\n      <g>\n        <path d='M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M19,19H5V5h14V19z' />\n        <rect height='5' width='2' x='7' y='12' />\n        <rect height='10' width='2' x='15' y='7' />\n        <rect height='3' width='2' x='11' y='14' />\n        <rect height='2' width='2' x='11' y='10' />\n      </g>\n    </g>\n  </svg>\n)\nexport const SiderMenuDashboardIcon = (props) => (\n  <Icon component={SiderMenuDashboardSvg} {...props} />\n)\nconst SiderMenuHomeSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z' />\n  </svg>\n)\nexport const SiderMenuHomeIcon = (props) => <Icon component={SiderMenuHomeSvg} {...props} />\n\nconst SiderSwitchSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#ffffff'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' />\n  </svg>\n)\nexport const SiderSwitchIcon = (props) => <Icon component={SiderSwitchSvg} {...props} />\n\nconst LoginPasswordOffSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z' fill='none' />\n    <path d='M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z' />\n  </svg>\n)\nexport const LoginPasswordOffIcon = (props) => <Icon component={LoginPasswordOffSvg} {...props} />\nconst LoginPasswordOnSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0z' fill='none' />\n    <path d='M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z' />\n  </svg>\n)\nexport const LoginPasswordOnIcon = (props) => <Icon component={LoginPasswordOnSvg} {...props} />\nconst LoginPasswordSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0z' fill='none' />\n    <path d='M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z' />\n  </svg>\n)\nexport const LoginPasswordIcon = (props) => <Icon component={LoginPasswordSvg} {...props} />\nconst LoginAccountSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0z' fill='none' />\n    <path d='M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z' />\n  </svg>\n)\nexport const LoginAccountIcon = (props) => <Icon component={LoginAccountSvg} {...props} />\n\nconst UtilCloseSvg = () => (\n  <svg height='36px' viewBox='0 0 24 24' width='36px' fill='#000000'>\n    <path d='M0 0h24v24H0V0z' fill='none' />\n    <path d='M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z' />\n  </svg>\n)\nexport const UtilCloseIcon = (props) => <Icon component={UtilCloseSvg} {...props} />\n","import axios from 'axios'\n\nconst baseUrl = process.env.REACT_APP_API_HOST\nconst testBaseUrl = process.env.REACT_APP_TESTAPI_HOST\n\nconst getAuth = () => {\n  const cookies = document.cookie.split(';')\n  const auth = cookies.find((cookie) => cookie.includes('MOTOBUY_AUTH'))\n  return auth ? auth.split('=')[1] : ''\n}\n\nexport const restInstanceWithoutAuth = (method, requestUrl, data) => {\n  const url = baseUrl + requestUrl\n  const config = {\n    url,\n    method,\n    timeout: 60000\n  }\n  if (method === 'get' && data && Object.keys(data).length > 0) {\n    config.params = data\n  } else if (data && Object.keys(data).length > 0) {\n    config.data = data\n  }\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => resolve(response))\n      .catch((error) => {\n        reject(error)\n        console.log(error.response)\n      })\n  })\n}\n\nexport const restInstance = (method, requestUrl, data) => {\n  const url = baseUrl + requestUrl\n  const config = {\n    url,\n    method,\n    timeout: 60000,\n    headers: {\n      Authorization: 'Basic ' + getAuth()\n    }\n  }\n  if (method === 'get' && data && Object.keys(data).length > 0) {\n    config.params = data\n  } else if (data && Object.keys(data).length > 0) {\n    config.data = data\n  }\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => resolve(response))\n      .catch((error) => {\n        reject(error)\n        console.log(error.response)\n      })\n  })\n}\n\nexport const testRestInstance = (method, requestUrl, data) => {\n  const url = testBaseUrl + requestUrl\n  const config = {\n    url,\n    method,\n    timeout: 60000,\n    headers: {\n      Authorization: 'Basic ' + getAuth()\n    }\n  }\n  if (method === 'get' && data && Object.keys(data).length > 0) {\n    config.params = data\n  } else if (data && Object.keys(data).length > 0) {\n    config.data = data\n  }\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => resolve(response))\n      .catch((error) => {\n        reject(error)\n        console.log(error.response)\n      })\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { createHashHistory } from 'history'\nimport { Buffer } from 'buffer'\nimport { Input, Checkbox, Button, message } from 'antd'\nimport {\n  LoginAccountIcon,\n  LoginPasswordIcon,\n  LoginPasswordOnIcon,\n  LoginPasswordOffIcon\n} from './icon/Icon'\nimport { restInstanceWithoutAuth } from '../model/runner/rest'\n\nexport const Login = (props) => {\n  const cookies = document.cookie.split(';')\n  let keepLogin =\n    cookies.find((cookie) => cookie.includes('MOTOBUY_KEEP_LOGIN')) &&\n    cookies.find((cookie) => cookie.includes('MOTOBUY_KEEP_LOGIN')).split('=')[1] === 'true'\n  const [isLogin, setIsLogin] = useState(false)\n  const [loginData, setLoginData] = useState({\n    userId: '',\n    password: ''\n  })\n\n  useEffect(() => {\n    document.title = '登入 - MOTOBUY PSI'\n    const history = createHashHistory()\n    history.replace('/')\n  }, [loginData])\n\n  const onInputChange = (key, e) => {\n    loginData[key] = e.target.value\n    setLoginData(loginData)\n  }\n\n  const onLogin = () => {\n    setIsLogin(true)\n    if (keepLogin) {\n      document.cookie = `MOTOBUY_KEEP_LOGIN=${keepLogin}; path=/; max-age=86400`\n    }\n    restInstanceWithoutAuth('post', '/author/login', loginData)\n      .then((response) => {\n        const data = response.data\n        if (data.code === 0) {\n          message.success('登入成功')\n          // save auth cookie\n          const auth = new Buffer(`${loginData.userId}:${loginData.password}`).toString('base64')\n          document.cookie = `MOTOBUY_AUTH=${auth}; path=/; max-age=86400`\n          // save permission roles\n          localStorage.setItem(\n            'MOTOBUY_ROLES',\n            JSON.stringify(data.data.authorities.map((role) => role.authority))\n          )\n          setTimeout(() => props.onLogin(), 200)\n        } else {\n          message.error('登入失敗')\n          setIsLogin(false)\n        }\n      })\n      .catch((error) => {\n        message.error('登入失敗')\n        setIsLogin(false)\n      })\n  }\n\n  return (\n    <div className='login-wrapper'>\n      <div className='login-board'>\n        <div className='login-board-header'>\n          <div className='login-board-logo'>M</div>\n          <h1 className='login-board-title'>MOTOBUY PSI</h1>\n        </div>\n        <div className='login-board-form'>\n          <Input\n            placeholder='User ID'\n            prefix={<LoginAccountIcon />}\n            onChange={(e) => onInputChange('userId', e)}\n          />\n          <Input.Password\n            placeholder='Password'\n            prefix={<LoginPasswordIcon />}\n            iconRender={(visible) => (visible ? <LoginPasswordOnIcon /> : <LoginPasswordOffIcon />)}\n            onChange={(e) => onInputChange('password', e)}\n          />\n          <Checkbox defaultChecked={keepLogin} onChange={(e) => (keepLogin = e.target.checked)}>\n            Keep me logged.\n          </Checkbox>\n        </div>\n        <div className='login-board-footer'>\n          <Button onClick={onLogin} loading={isLogin}>\n            LOGIN\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {\n  SiderMenuHomeIcon,\n  SiderMenuDashboardIcon,\n  SiderMenuBasicIcon,\n  SiderMenuWidgetIcon,\n  SiderMenuProductIcon\n} from '../icon/Icon'\n\nexport const routes = [\n  {\n    path: '/Dashboard',\n    title: '儀表板'\n  },\n  {\n    path: '/Basic/Supplier',\n    title: '廠商 - 基本資料'\n  },\n  {\n    path: '/Basic/Customer',\n    title: '客戶 - 基本資料'\n  },\n  {\n    path: '/Basic/Employee',\n    title: '員工 - 基本資料'\n  },\n  {\n    path: '/Basic',\n    title: '基本資料'\n  },\n  {\n    path: '/Parts/Vehicle',\n    title: '車種 - 零件管理'\n  },\n  {\n    path: '/Parts/Level',\n    title: '等級 - 零件管理'\n  },\n  {\n    path: '/Parts/Colour',\n    title: '顏色 - 零件管理'\n  },\n  {\n    path: '/Parts/Component',\n    title: '零件 - 零件管理'\n  },\n  {\n    path: '/Parts',\n    title: '零件管理'\n  },\n  {\n    path: '/',\n    title: '首頁'\n  }\n]\n\nexport const menuType = [\n  // {\n  //   key: 'Home',\n  //   routes: [''],\n  //   icon: <SiderMenuHomeIcon />,\n  //   title: '首頁',\n  //   accessRoles: []\n  // },\n  {\n    key: 'Dashboard',\n    routes: ['Dashboard'],\n    icon: <SiderMenuDashboardIcon />,\n    title: '儀表板',\n    accessRoles: []\n  },\n  {\n    key: 'Basic',\n    routes: ['Basic'],\n    icon: <SiderMenuBasicIcon />,\n    title: '基本資料',\n    accessRoles: ['ROLE_BASIC_MENU'],\n    children: [\n      {\n        key: 'BasicSupplier',\n        routes: ['Basic', 'Supplier'],\n        title: '廠商',\n        accessRoles: ['ROLE_VENDOR']\n      },\n      {\n        key: 'BasicCustomer',\n        routes: ['Basic', 'Customer'],\n        title: '客戶',\n        accessRoles: ['ROLE_CUSTOMER']\n      },\n      {\n        key: 'BasicEmployee',\n        routes: ['Basic', 'Employee'],\n        title: '員工',\n        accessRoles: ['ROLE_EMPLOYEE']\n      }\n    ]\n  },\n  {\n    key: 'Parts',\n    routes: ['Parts'],\n    icon: <SiderMenuWidgetIcon />,\n    title: '零件管理',\n    accessRoles: ['ROLE_PART_MENU'],\n    children: [\n      {\n        key: 'PartsVehicle',\n        routes: ['Parts', 'Vehicle'],\n        title: '車種',\n        accessRoles: ['ROLE_KIND']\n      },\n      {\n        key: 'PartsLevel',\n        routes: ['Parts', 'Level'],\n        title: '等級',\n        accessRoles: ['ROLE_GRADE']\n      },\n      {\n        key: 'PartsColour',\n        routes: ['Parts', 'Colour'],\n        title: '顏色',\n        accessRoles: ['ROLE_COLOR']\n      },\n      {\n        key: 'PartsComponent',\n        routes: ['Parts', 'Component'],\n        title: '零件',\n        accessRoles: ['ROLE_PART']\n      }\n    ]\n  },\n  {\n    key: 'Products',\n    routes: ['Products'],\n    icon: <SiderMenuProductIcon />,\n    title: '商品管理',\n    accessRoles: ['ROLE_PRODUCT_MENU'],\n    children: [\n      {\n        key: 'ProductsList',\n        routes: ['Products', 'List'],\n        title: '列表',\n        accessRoles: ['ROLE_PRODUCT']\n      },\n      {\n        key: 'ProductsImport',\n        routes: ['Products', 'Import'],\n        title: '匯入',\n        accessRoles: ['ROLE_PRODUCT_IMPORT']\n      }\n    ]\n  }\n]\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { createHashHistory } from 'history'\nimport { Menu } from 'antd'\nimport { routes, menuType } from './menuType'\n\nexport const LayoutSider = (props) => {\n  const [selectedKeys, setSelectedKeys] = useState([])\n  useEffect(() => {\n    changeTitle(props.match.url)\n    const unlisten = props.history.listen((location) => {\n      changeTitle(location.pathname)\n    })\n    return () => {\n      unlisten()\n    }\n  }, [])\n  useEffect(() => {\n    if (props.match.params.page !== undefined) {\n      setSelectedKeys([props.match.params.type + props.match.params.page])\n    } else if (props.match.params.type !== undefined) {\n      setSelectedKeys([props.match.params.type])\n    } else {\n      setSelectedKeys(['Home'])\n    }\n  }, [props.match.params.type, props.match.params.page])\n\n  const changeTitle = (url) => {\n    const route = routes.find((route) => new RegExp(`^(${route.path})`).test(url))\n    if (route) document.title = `${route.title} - MOTOBUY PSI`\n  }\n\n  const onMenuClick = ({ item }) => {\n    const history = createHashHistory()\n    const path = item.props.data.routes.map((route) => `/${route}`).join('')\n    history.push(path)\n    setSelectedKeys(item.props.data.routes[0] === '' ? ['Home'] : item.props.data.routes)\n  }\n\n  return (\n    <>\n      <h1 className='layout-sider-logo'>\n        <Link to='/'>\n          <span className='layout-sider-logo-f'>\n            MOTOBUY\n            <br />\n            PSI\n          </span>\n          <span className='layout-sider-logo-s'>M</span>\n        </Link>\n      </h1>\n      <Menu className='layout-sider-menu' selectedKeys={selectedKeys} onClick={onMenuClick}>\n        {menuType.map((menu) => {\n          const roles = JSON.parse(localStorage.getItem('MOTOBUY_ROLES'))\n          if (\n            menu.accessRoles.length < 1 ||\n            menu.accessRoles.filter((role) => roles.includes(role)).length > 0\n          ) {\n            return menu.children && menu.children.length > 0 ? (\n              <Menu.SubMenu\n                key={menu.key}\n                icon={menu.icon}\n                title={menu.title}\n                popupClassName='layout-sider-popup'\n              >\n                {menu.children.map((children) => {\n                  if (\n                    children.accessRoles.length < 1 ||\n                    children.accessRoles.filter((role) => roles.includes(role)).length > 0\n                  ) {\n                    return (\n                      <Menu.Item key={children.key} data={children}>\n                        {children.title}\n                      </Menu.Item>\n                    )\n                  }\n                  return null\n                })}\n              </Menu.SubMenu>\n            ) : (\n              <Menu.Item key={menu.key} icon={menu.icon} data={menu}>\n                {menu.title}\n              </Menu.Item>\n            )\n          }\n          return null\n        })}\n      </Menu>\n    </>\n  )\n}\n","import React from 'react'\nimport { Input, Button } from 'antd'\nimport {\n  HeaderNotifyEmptyIcon,\n  HeaderNotifyExistIcon,\n  HeaderLogoutIcon,\n  HeaderAccountIcon\n} from '../icon/Icon'\n\nexport const LayoutHeader = (props) => {\n  return (\n    <>\n      <div className='layout-header-left'>\n        <Input.Search placeholder='全域搜尋' enterButton />\n      </div>\n      <div className='layout-header-right'>\n        <Button>\n          <HeaderNotifyEmptyIcon />\n        </Button>\n        <Button onClick={props.onLogout}>\n          <HeaderLogoutIcon />\n        </Button>\n        <Button className='layout-header-account'>\n          <HeaderAccountIcon />\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { createHashHistory } from 'history'\n\nexport const Dashboard = (props) => {\n  useEffect(() => {\n    const history = createHashHistory()\n    history.replace('/Dashboard')\n  })\n\n  return 'Dashboard'\n}\n","export const getPaginationSetting = (pager, onChange) => {\n  return {\n    ...pager,\n    showTotal: (total, range) => `${range[0]} - ${range[1]} 共 ${total} 筆`,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    onChange\n  }\n}\n","import { restInstance } from '../runner/rest'\n\nexport default class SupplierAPI {\n  getSupplierList = (data) => {\n    return restInstance('get', '/vendor', data).then((response) => response.data)\n  }\n\n  getSupplierData = (vendorId) => {\n    return restInstance('get', `/vendor/${vendorId}`).then((response) => response.data)\n  }\n\n  addSupplierData = (data) => {\n    return restInstance('post', `/vendor/${data.vendorId}`, data).then((response) => response.data)\n  }\n\n  updateSupplierData = (vendorId, data) => {\n    return restInstance('patch', `/vendor/${vendorId}`, data).then((response) => response.data)\n  }\n}\n","import React from 'react'\r\nimport { createHashHistory } from 'history'\r\nimport { Button, Col, Input, Row, Select, Space, Table, Tooltip, Modal } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon } from '../icon/Icon'\r\nimport { getPaginationSetting } from '../../component/paginationSetting'\r\nimport SupplierAPI from '../../model/api/supplier'\r\n\r\nexport default class Supplier extends React.Component {\r\n  history = createHashHistory()\r\n  supplierAPI = new SupplierAPI()\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      search: {\r\n        id: 'VENDOR_ID',\r\n        keyword: ''\r\n      },\r\n      list: [],\r\n      pagination: {\r\n        current: 1,\r\n        total: 0,\r\n        pageSize: 10,\r\n        position: ['bottomLeft']\r\n      }\r\n    }\r\n    this.getList()\r\n  }\r\n\r\n  getList = () => {\r\n    const { search, pagination } = this.state\r\n    const requestData = {\r\n      pageNum: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      queryByEnum: search.id,\r\n      queryKeyWord: `%${search.keyword}%`\r\n    }\r\n    this.supplierAPI\r\n      .getSupplierList(requestData)\r\n      .then((response) => {\r\n        pagination.total = response.data.total\r\n        this.setState({ loading: false, list: response.data.list, pagination })\r\n      })\r\n      .catch(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  // search\r\n  onSelectChange = (value) => {\r\n    const { search } = this.state\r\n    search.id = value\r\n    this.setState({ search })\r\n  }\r\n  onInputChange = (e) => {\r\n    const { search } = this.state\r\n    search.keyword = e.target.value\r\n    this.setState({ search })\r\n  }\r\n  handleSearch = () => {\r\n    this.setState({ loading: true, list: [] }, () => this.getList())\r\n  }\r\n\r\n  getColumns = () => {\r\n    const _this = this\r\n    const { pagination } = this.state\r\n    return [\r\n      {\r\n        dataIndex: 'vendorId',\r\n        title: '執行',\r\n        width: 50,\r\n        render: (vendorId) => (\r\n          <Space className='list-table-option'>\r\n            <Tooltip title='編輯'>\r\n              <Button\r\n                className='list-table-option-edit'\r\n                size='small'\r\n                onClick={_this.onEdit.bind(_this, vendorId)}\r\n              >\r\n                <ListEditIcon />\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip title='刪除'>\r\n              <Button\r\n                className='list-table-option-delete'\r\n                size='small'\r\n                onClick={_this.handleDelete.bind(_this, vendorId)}\r\n              >\r\n                <ListDeleteIcon />\r\n              </Button>\r\n            </Tooltip>\r\n          </Space>\r\n        )\r\n      },\r\n      {\r\n        title: '序',\r\n        width: 30,\r\n        align: 'center',\r\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\r\n      },\r\n      {\r\n        title: '廠商代號',\r\n        dataIndex: 'vendorId'\r\n      },\r\n      {\r\n        title: '廠商簡稱',\r\n        dataIndex: 'shortName'\r\n      },\r\n      {\r\n        title: '聯絡人',\r\n        dataIndex: 'contactPerson'\r\n      },\r\n      {\r\n        title: '地址',\r\n        dataIndex: 'address'\r\n      },\r\n      {\r\n        title: '電話1',\r\n        dataIndex: 'phone1'\r\n      },\r\n      {\r\n        title: '傳真號碼',\r\n        dataIndex: 'faxNumber'\r\n      },\r\n      {\r\n        title: '行動電話',\r\n        dataIndex: 'cellPhone'\r\n      }\r\n    ]\r\n  }\r\n\r\n  onEdit = (vendorId) => {\r\n    this.history.push(`/Basic/Supplier/${vendorId}`)\r\n  }\r\n\r\n  handleDelete = (vendorId) => {\r\n    Modal.confirm({\r\n      title: '確定要刪除此筆資料嗎',\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: '確認',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        console.log('delete: ' + vendorId)\r\n      }\r\n    })\r\n  }\r\n\r\n  onPageChange = (page, pageSize) => {\r\n    const { pagination } = this.state\r\n    pagination.current = page\r\n    pagination.pageSize = pageSize\r\n    this.setState({ loading: true, list: [] }, () => this.getList())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='list-header'>\r\n          <Row type='flex' justify='space-between'>\r\n            <Col>\r\n              <Button\r\n                type='primary'\r\n                icon={<ListAddIcon />}\r\n                onClick={() => this.history.push('/Basic/Supplier/Add')}\r\n                className='list-header-add'\r\n              >\r\n                新增\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Space>\r\n                <Select\r\n                  placeholder='搜尋欄位'\r\n                  value={this.state.search.id}\r\n                  onChange={this.onSelectChange}\r\n                >\r\n                  <Select.Option value='VENDOR_ID'>廠商代號</Select.Option>\r\n                  <Select.Option value='NAME'>廠商名稱</Select.Option>\r\n                </Select>\r\n                <Input placeholder='搜尋內容' allowClear={true} onChange={this.onInputChange} />\r\n                <Button\r\n                  type='primary'\r\n                  icon={<ListSearchIcon />}\r\n                  onClick={this.handleSearch}\r\n                  className='list-header-search'\r\n                >\r\n                  查詢\r\n                </Button>\r\n              </Space>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Table\r\n          className='list-table-wrapper'\r\n          rowKey='vendorId'\r\n          size='small'\r\n          columns={this.getColumns()}\r\n          loading={this.state.loading}\r\n          dataSource={this.state.list}\r\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Typography } from 'antd'\r\n\r\nexport const FormItem = ({ required, align = 'center', title, content, message, error }) => {\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: align }}>\r\n      <div style={{ marginRight: 8, width: 80, textAlign: 'right' }}>\r\n        {required && (\r\n          <Typography.Text type='danger' style={{ marginRight: 5 }}>\r\n            *\r\n          </Typography.Text>\r\n        )}\r\n        <Typography.Text>{title}</Typography.Text>\r\n      </div>\r\n      <div style={{ width: 'calc(100% - 80px)', position: 'relative' }}>\r\n        {content}\r\n        {error && (\r\n          <span\r\n            style={{\r\n              color: 'red',\r\n              position: 'absolute',\r\n              width: '100%',\r\n              left: 0,\r\n              top: '100%',\r\n              fontSize: '12px'\r\n            }}\r\n          >\r\n            {message}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const initData = {\n  vendorId: '',\n  name: '',\n  shortName: '',\n  principal: '',\n  contactPerson: '',\n  postCode: '',\n  address: '',\n  phone1: '',\n  phone2: '',\n  faxNumber: '',\n  cellPhone: '',\n  note1: '',\n  note2: ''\n}\n\nexport const formRules = [\n  {\n    key: 'vendorId',\n    required: true,\n    length: [10]\n  },\n  {\n    key: 'name',\n    required: true,\n    length: [30]\n  },\n  {\n    key: 'shortName',\n    required: true,\n    length: [10]\n  },\n  {\n    key: 'principal',\n    length: [2, 10]\n  },\n  {\n    key: 'contactPerson',\n    length: [2, 10]\n  },\n  {\n    key: 'address',\n    length: [100]\n  },\n  {\n    key: 'phone1',\n    required: true,\n    length: [10]\n  },\n  {\n    key: 'phone2',\n    length: [10]\n  },\n  {\n    key: 'faxNumber',\n    length: [10]\n  },\n  {\n    key: 'cellPhone',\n    length: [10]\n  },\n  {\n    key: 'note1',\n    length: [255]\n  },\n  {\n    key: 'note2',\n    length: [255]\n  }\n]\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Breadcrumb, Card, Col, Row, Input, Button, Space, Modal, Spin, message } from 'antd'\r\nimport { FormItem } from '../../component/FormItem'\r\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { createHashHistory } from 'history'\r\nimport { initData, formRules } from './supplierType'\r\n// import addressDistrict from '../../model/resource/addressDistrict.json'\r\nimport SupplierAPI from '../../model/api/supplier'\r\n\r\nexport default class SupplierForm extends React.Component {\r\n  history = createHashHistory()\r\n  supplierAPI = new SupplierAPI()\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: !props.createFlag,\r\n      formData: { ...initData },\r\n      formStatus: JSON.parse(JSON.stringify(formRules)),\r\n      canSubmit: false\r\n    }\r\n    if (!props.createFlag) {\r\n      this.getSupplierData()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.createFlag && this.props.createFlag) {\r\n      this.setState({\r\n        loading: false,\r\n        formData: { ...initData },\r\n        formStatus: JSON.parse(JSON.stringify(formRules)),\r\n        canSubmit: false\r\n      })\r\n    } else if (!this.props.createFlag && prevProps.vendorId !== this.props.vendorId) {\r\n      this.setState(\r\n        {\r\n          loading: true,\r\n          formData: { ...initData },\r\n          formStatus: JSON.parse(JSON.stringify(formRules)),\r\n          canSubmit: false\r\n        },\r\n        () => this.getSupplierData()\r\n      )\r\n    }\r\n  }\r\n\r\n  getSupplierData = () => {\r\n    this.supplierAPI\r\n      .getSupplierData(this.props.vendorId)\r\n      .then((response) => {\r\n        if (response.code === 0) {\r\n          this.setState({ loading: false, formData: response.data }, () => this.checkCanSubmit())\r\n        } else {\r\n          message.error(response.message)\r\n          this.history.push('/Basic/Supplier')\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message.error('Error!')\r\n        this.history.push('/Basic/Supplier')\r\n      })\r\n  }\r\n\r\n  getFormErrorStatus = (key) => {\r\n    const { formStatus } = this.state\r\n    const field = formStatus.find((field) => field.key === key)\r\n    return field ? field.error : false\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const type = event.target.getAttribute('id')\r\n    const text = event.target.value\r\n    const { formData } = this.state\r\n    formData[type] = type === 'vendorId' ? text.toUpperCase() : text\r\n    this.checkData(formData, type)\r\n  }\r\n\r\n  // field validator\r\n  checkData = (formData, fieldKey) => {\r\n    const { formStatus } = this.state\r\n    const field = formStatus.find((field) => field.key === fieldKey)\r\n    if (field) {\r\n      const value = formData[fieldKey]\r\n      let error = false\r\n      if (field.required && !value) {\r\n        error = true\r\n      }\r\n      if (field.length && field.length.length > 0 && value) {\r\n        if (field.length.length === 1 && value.length > field.length[0]) {\r\n          error = true\r\n        } else if (\r\n          field.length.length > 1 &&\r\n          (value.length < field.length[0] || value.length > field.length[1])\r\n        ) {\r\n          error = true\r\n        }\r\n      }\r\n      if (field.regExp && !field.regExp.test(value)) {\r\n        error = true\r\n      }\r\n      field.error = error\r\n    }\r\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\r\n  }\r\n  checkCanSubmit = () => {\r\n    let canSubmit = true\r\n    const { formData, formStatus } = this.state\r\n    formStatus.forEach((field) => {\r\n      if (field.error) {\r\n        canSubmit = false\r\n      } else if (field.required && !formData[field.key]) {\r\n        canSubmit = false\r\n      } else if (field.length && field.length.length > 0 && formData[field.key]) {\r\n        if (field.length.length === 1 && formData[field.key].length > field.length[0]) {\r\n          canSubmit = false\r\n        } else if (\r\n          field.length.length > 1 &&\r\n          (formData[field.key].length < field.length[0] ||\r\n            formData[field.key].length > field.length[1])\r\n        ) {\r\n          canSubmit = false\r\n        }\r\n      } else if (field.regExp && !field.regExp.test(formData[field.key])) {\r\n        canSubmit = false\r\n      }\r\n    })\r\n    this.setState({ canSubmit })\r\n  }\r\n\r\n  // 新增\r\n  handleCreate = (back) => {\r\n    this.setState({ loading: true }, () => {\r\n      this.supplierAPI\r\n        .addSupplierData(this.state.formData)\r\n        .then((response) => {\r\n          if (response.code === 0) {\r\n            message.success('成功新增資料')\r\n            if (back) {\r\n              this.history.push('/Basic/Supplier')\r\n            } else {\r\n              const layoutContent = document.getElementById('layout-content-wrapper')\r\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\r\n              this.setState({\r\n                loading: false,\r\n                formData: { ...initData },\r\n                formStatus: JSON.parse(JSON.stringify(formRules)),\r\n                canSubmit: false\r\n              })\r\n            }\r\n          } else {\r\n            Modal.error({\r\n              title: response.message,\r\n              icon: <ExclamationCircleOutlined />,\r\n              okText: '確認',\r\n              cancelText: null,\r\n              onOk: () => {\r\n                this.setState({ loading: false })\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.response.data.message)\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n  // 修改\r\n  handleSubmit = (back) => {\r\n    this.setState({ loading: true }, () => {\r\n      this.supplierAPI\r\n        .updateSupplierData(this.props.vendorId, this.state.formData)\r\n        .then((response) => {\r\n          if (response.code === 0) {\r\n            message.success('成功更新資料')\r\n            if (back) {\r\n              this.history.push('/Basic/Supplier')\r\n            } else {\r\n              const layoutContent = document.getElementById('layout-content-wrapper')\r\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\r\n              this.getSupplierData()\r\n            }\r\n          } else {\r\n            Modal.error({\r\n              title: response.message,\r\n              icon: <ExclamationCircleOutlined />,\r\n              content: response.data.map((tip, index) => (\r\n                <>\r\n                  {index > 0 && <br />}\r\n                  {tip.split(': ')[1]}\r\n                </>\r\n              )),\r\n              okText: '確認',\r\n              cancelText: null,\r\n              onOk: () => {\r\n                this.setState({ loading: false })\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .catch(() => {\r\n          message.error('資料更新失敗')\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    Modal.confirm({\r\n      title: '變更尚未儲存，確定要離開嗎',\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: '確認',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        this.history.push('/Basic/Supplier')\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const rowSetting = {\r\n      gutter: [24, 24],\r\n      type: 'flex',\r\n      align: 'middle',\r\n      style: { marginBottom: 24, marginTop: 24 }\r\n    }\r\n    const colSetting = {\r\n      xs: 24,\r\n      sm: 24,\r\n      md: 24,\r\n      lg: 8\r\n    }\r\n    return (\r\n      <>\r\n        <Breadcrumb style={{ marginBottom: 10 }}>\r\n          <Breadcrumb.Item>\r\n            <Link to='/Basic/Supplier'>廠商</Link>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>{this.props.createFlag ? '新增廠商' : '修改廠商資料'}</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Spin spinning={this.state.loading}>\r\n          <Card className='form-detail-card'>\r\n            <Row {...rowSetting}>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={true}\r\n                  title='廠商代號'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.vendorId}\r\n                      id='vendorId'\r\n                      disabled={!this.props.createFlag}\r\n                    />\r\n                  }\r\n                  message='廠商代號為必填,長度需在10字內'\r\n                  error={this.getFormErrorStatus('vendorId')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={true}\r\n                  title='廠商名稱'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.name}\r\n                      id='name'\r\n                    />\r\n                  }\r\n                  message='廠商名稱為必填,長度需在30字內'\r\n                  error={this.getFormErrorStatus('name')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={true}\r\n                  title='廠商簡稱'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.shortName}\r\n                      id='shortName'\r\n                    />\r\n                  }\r\n                  message='廠商簡稱為必填,長度需在10字內'\r\n                  error={this.getFormErrorStatus('shortName')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='負責人'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.principal}\r\n                      id='principal'\r\n                    />\r\n                  }\r\n                  message='長度需在2~10字'\r\n                  error={this.getFormErrorStatus('principal')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='聯絡人'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.contactPerson}\r\n                      id='contactPerson'\r\n                    />\r\n                  }\r\n                  message='長度需在2~10字'\r\n                  error={this.getFormErrorStatus('contactPerson')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='傳真號碼'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.faxNumber}\r\n                      id='faxNumber'\r\n                    />\r\n                  }\r\n                  message='長度需在10字內'\r\n                  error={this.getFormErrorStatus('faxNumber')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={true}\r\n                  title='電話1'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.phone1}\r\n                      id='phone1'\r\n                    />\r\n                  }\r\n                  message='電話1為必填,長度需在10字內'\r\n                  error={this.getFormErrorStatus('phone1')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='電話2'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.phone2}\r\n                      id='phone2'\r\n                    />\r\n                  }\r\n                  message='長度需在10字內'\r\n                  error={this.getFormErrorStatus('phone2')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='行動電話'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.cellPhone}\r\n                      id='cellPhone'\r\n                    />\r\n                  }\r\n                  message='長度需在10字內'\r\n                  error={this.getFormErrorStatus('cellPhone')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          <Card className='form-detail-card'>\r\n            <Row {...rowSetting}>\r\n              <Col span={24}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='地址'\r\n                  content={\r\n                    <>\r\n                      <Row type='flex' gutter={[10]}>\r\n                        <Col style={{ width: 120 }}>\r\n                          <Input\r\n                            onChange={this.onInputChange}\r\n                            value={this.state.formData.postCode}\r\n                            id='postCode'\r\n                            placeholder='郵遞區號'\r\n                          />\r\n                        </Col>\r\n                        <Col style={{ width: 'calc(100% - 120px)' }}>\r\n                          <Input\r\n                            onChange={this.onInputChange}\r\n                            value={this.state.formData.address}\r\n                            id='address'\r\n                            placeholder='地址'\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  message='長度需在100字內'\r\n                  error={this.getFormErrorStatus('address')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          <Card className='form-detail-card'>\r\n            <Row {...rowSetting} align='top'>\r\n              <Col span={24}>\r\n                <FormItem\r\n                  required={false}\r\n                  align='flex-start'\r\n                  title='備註1'\r\n                  content={\r\n                    <Input.TextArea\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.note1}\r\n                      id='note1'\r\n                      autoSize={{ minRows: 4, maxRows: 4 }}\r\n                    />\r\n                  }\r\n                  message='長度需在255字內'\r\n                  error={this.getFormErrorStatus('note1')}\r\n                />\r\n              </Col>\r\n              <Col span={24}>\r\n                <FormItem\r\n                  required={false}\r\n                  align='flex-start'\r\n                  title='備註2'\r\n                  content={\r\n                    <Input.TextArea\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.note2}\r\n                      id='note2'\r\n                      autoSize={{ minRows: 4, maxRows: 4 }}\r\n                    />\r\n                  }\r\n                  message='長度需在255字內'\r\n                  error={this.getFormErrorStatus('note2')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          <div style={{ margin: '20px', textAlign: 'center' }}>\r\n            <Space>\r\n              {this.props.createFlag ? (\r\n                <>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleCreate.bind(this, true)}\r\n                  >\r\n                    儲存\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleCreate.bind(this, false)}\r\n                  >\r\n                    儲存並繼續新增\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleSubmit.bind(this, false)}\r\n                  >\r\n                    儲存\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleSubmit.bind(this, true)}\r\n                  >\r\n                    儲存並返回列表\r\n                  </Button>\r\n                </>\r\n              )}\r\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\r\n                取消\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        </Spin>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport SupplierForm from './SupplierForm'\r\n\r\nexport default class SupplierDetail extends React.Component {\r\n  render() {\r\n    return (\r\n      <SupplierForm\r\n        createFlag={this.props.createFlag}\r\n        vendorId={this.props.match.params.vendorId}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import { restInstance } from '../runner/rest'\n\nexport default class CustomerAPI {\n  getCustomerList = (data) => {\n    return restInstance('get', '/customers', data).then((response) => response.data)\n  }\n\n  getCustomerData = (customerId) => {\n    return restInstance('get', `/customers/${customerId}`).then((response) => response.data)\n  }\n\n  addCustomerData = (data) => {\n    return restInstance('post', `/customers/${data.customerId}`, data).then((response) => response.data)\n  }\n\n  updateCustomerData = (customerId, data) => {\n    return restInstance('patch', `/customers/${customerId}`, data).then((response) => response.data)\n  }\n}\n","import React from 'react'\r\nimport { createHashHistory } from 'history'\r\nimport { Button, Col, Input, Row, Select, Space, Table, Tooltip, Modal } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon } from '../icon/Icon'\r\nimport { getPaginationSetting } from '../../component/paginationSetting'\r\nimport CustomerAPI from '../../model/api/customer'\r\n\r\nexport default class Customer extends React.Component {\r\n  history = createHashHistory()\r\n  customerAPI = new CustomerAPI()\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      search: {\r\n        id: 'CUSTOMER_ID',\r\n        keyword: ''\r\n      },\r\n      list: [],\r\n      pagination: {\r\n        current: 1,\r\n        total: 0,\r\n        pageSize: 10,\r\n        position: ['bottomLeft']\r\n      }\r\n    }\r\n    this.getList()\r\n  }\r\n\r\n  getList = () => {\r\n    const { search, pagination } = this.state\r\n    const requestData = {\r\n      pageNum: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      queryByEnum: search.id,\r\n      queryKeyWord: `%${search.keyword}%`\r\n    }\r\n    this.customerAPI\r\n      .getCustomerList(requestData)\r\n      .then((response) => {\r\n        pagination.total = response.data.total\r\n        this.setState({ loading: false, list: response.data.list, pagination })\r\n      })\r\n      .catch(() => this.setState({ loading: false }))\r\n  }\r\n\r\n  // search\r\n  onSelectChange = (value) => {\r\n    const { search } = this.state\r\n    search.id = value\r\n    this.setState({ search })\r\n  }\r\n  onInputChange = (e) => {\r\n    const { search } = this.state\r\n    search.keyword = e.target.value\r\n    this.setState({ search })\r\n  }\r\n  handleSearch = () => {\r\n    this.setState({ loading: true, list: [] }, () => this.getList())\r\n  }\r\n\r\n  getColumns = () => {\r\n    const _this = this\r\n    const { pagination } = this.state\r\n    return [\r\n      {\r\n        dataIndex: 'customerId',\r\n        title: '執行',\r\n        width: 50,\r\n        render: (customerId) => (\r\n          <Space className='list-table-option'>\r\n            <Tooltip title='編輯'>\r\n              <Button\r\n                className='list-table-option-edit'\r\n                size='small'\r\n                onClick={_this.onEdit.bind(_this, customerId)}\r\n              >\r\n                <ListEditIcon />\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip title='刪除'>\r\n              <Button\r\n                className='list-table-option-delete'\r\n                size='small'\r\n                onClick={_this.handleDelete.bind(_this, customerId)}\r\n              >\r\n                <ListDeleteIcon />\r\n              </Button>\r\n            </Tooltip>\r\n          </Space>\r\n        )\r\n      },\r\n      {\r\n        title: '序',\r\n        width: 30,\r\n        align: 'center',\r\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\r\n      },\r\n      {\r\n        title: '客戶代號',\r\n        dataIndex: 'customerId'\r\n      },\r\n      {\r\n        title: '客戶簡稱',\r\n        dataIndex: 'shortName'\r\n      },\r\n      {\r\n        title: '聯絡人',\r\n        dataIndex: 'contactPerson'\r\n      },\r\n      {\r\n        title: '地址',\r\n        dataIndex: 'address'\r\n      },\r\n      {\r\n        title: '電話1',\r\n        dataIndex: 'phone1'\r\n      },\r\n      {\r\n        title: '傳真號碼',\r\n        dataIndex: 'faxNumber'\r\n      },\r\n      {\r\n        title: '行動電話',\r\n        dataIndex: 'cellPhone'\r\n      }\r\n    ]\r\n  }\r\n\r\n  onEdit = (customerId) => {\r\n    this.history.push(`/Basic/Customer/${customerId}`)\r\n  }\r\n\r\n  handleDelete = (customerId) => {\r\n    Modal.confirm({\r\n      title: '確定要刪除此筆資料嗎',\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: '確認',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        console.log('delete: ' + customerId)\r\n      }\r\n    })\r\n  }\r\n\r\n  onPageChange = (page, pageSize) => {\r\n    const { pagination } = this.state\r\n    pagination.current = page\r\n    pagination.pageSize = pageSize\r\n    this.setState({ loading: true, list: [] }, () => this.getList())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='list-header'>\r\n          <Row type='flex' justify='space-between'>\r\n            <Col>\r\n              <Button\r\n                type='primary'\r\n                icon={<ListAddIcon />}\r\n                onClick={() => this.history.push('/Basic/Customer/Add')}\r\n                className='list-header-add'\r\n              >\r\n                新增\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Space>\r\n                <Select\r\n                  placeholder='搜尋欄位'\r\n                  value={this.state.search.id}\r\n                  onChange={this.onSelectChange}\r\n                >\r\n                  <Select.Option value='CUSTOMER_ID'>客戶代號</Select.Option>\r\n                  <Select.Option value='NAME'>客戶名稱</Select.Option>\r\n                </Select>\r\n                <Input placeholder='搜尋內容' allowClear={true} onChange={this.onInputChange} />\r\n                <Button\r\n                  type='primary'\r\n                  icon={<ListSearchIcon />}\r\n                  onClick={this.handleSearch}\r\n                  className='list-header-search'\r\n                >\r\n                  查詢\r\n                </Button>\r\n              </Space>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Table\r\n          className='list-table-wrapper'\r\n          rowKey='customerId'\r\n          size='small'\r\n          columns={this.getColumns()}\r\n          loading={this.state.loading}\r\n          dataSource={this.state.list}\r\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","export const initData = {\n  customerId: '',\n  name: '',\n  shortName: '',\n  principal: '',\n  contactPerson: '',\n  postCode: '',\n  address: '',\n  phone1: '',\n  phone2: '',\n  faxNumber: '',\n  cellPhone: '',\n  note1: '',\n  note2: ''\n}\n\nexport const formRules = [\n  {\n    key: 'customerId',\n    required: true,\n    length: [10]\n  },\n  {\n    key: 'name',\n    required: true,\n    length: [30]\n  },\n  {\n    key: 'shortName',\n    required: true,\n    length: [10]\n  },\n  {\n    key: 'principal',\n    length: [2, 10]\n  },\n  {\n    key: 'contactPerson',\n    length: [2, 10]\n  },\n  {\n    key: 'address',\n    length: [100]\n  },\n  {\n    key: 'phone1',\n    length: [10]\n  },\n  {\n    key: 'phone2',\n    length: [10]\n  },\n  {\n    key: 'faxNumber',\n    length: [10]\n  },\n  {\n    key: 'cellPhone',\n    length: [10]\n  },\n  {\n    key: 'note1',\n    length: [255]\n  },\n  {\n    key: 'note2',\n    length: [255]\n  }\n]\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Breadcrumb, Card, Col, Row, Input, Button, Space, Modal, Spin, message } from 'antd'\r\nimport { FormItem } from '../../component/FormItem'\r\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { createHashHistory } from 'history'\r\nimport { initData, formRules } from './customerType'\r\n// import addressDistrict from '../../model/resource/addressDistrict.json'\r\nimport CustomerAPI from '../../model/api/customer'\r\n\r\nexport default class CustomerForm extends React.Component {\r\n  history = createHashHistory()\r\n  customerAPI = new CustomerAPI()\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: !props.createFlag,\r\n      formData: { ...initData },\r\n      formStatus: JSON.parse(JSON.stringify(formRules)),\r\n      canSubmit: false\r\n    }\r\n    if (!props.createFlag) {\r\n      this.getCustomerData()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.createFlag && this.props.createFlag) {\r\n      this.setState({\r\n        loading: false,\r\n        formData: { ...initData },\r\n        formStatus: JSON.parse(JSON.stringify(formRules)),\r\n        canSubmit: false\r\n      })\r\n    } else if (!this.props.createFlag && prevProps.customerId !== this.props.customerId) {\r\n      this.setState(\r\n        {\r\n          loading: true,\r\n          formData: { ...initData },\r\n          formStatus: JSON.parse(JSON.stringify(formRules)),\r\n          canSubmit: false\r\n        },\r\n        () => this.getCustomerData()\r\n      )\r\n    }\r\n  }\r\n\r\n  getCustomerData = () => {\r\n    this.customerAPI\r\n      .getCustomerData(this.props.customerId)\r\n      .then((response) => {\r\n        if (response.code === 0) {\r\n          this.setState({ loading: false, formData: response.data }, () => this.checkCanSubmit())\r\n        } else {\r\n          message.error(response.message)\r\n          this.history.push('/Basic/Customer')\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message.error('Error!')\r\n        this.history.push('/Basic/Customer')\r\n      })\r\n  }\r\n\r\n  getFormErrorStatus = (key) => {\r\n    const { formStatus } = this.state\r\n    const field = formStatus.find((field) => field.key === key)\r\n    return field ? field.error : false\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    const type = event.target.getAttribute('id')\r\n    const text = event.target.value\r\n    const { formData } = this.state\r\n    formData[type] = text\r\n    this.checkData(formData, type)\r\n  }\r\n\r\n  // field validator\r\n  checkData = (formData, fieldKey) => {\r\n    const { formStatus } = this.state\r\n    const field = formStatus.find((field) => field.key === fieldKey)\r\n    if (field) {\r\n      const value = formData[fieldKey]\r\n      let error = false\r\n      if (field.required && !value) {\r\n        error = true\r\n      }\r\n      if (field.length && field.length.length > 0 && value) {\r\n        if (field.length.length === 1 && value.length > field.length[0]) {\r\n          error = true\r\n        } else if (\r\n          field.length.length > 1 &&\r\n          (value.length < field.length[0] || value.length > field.length[1])\r\n        ) {\r\n          error = true\r\n        }\r\n      }\r\n      if (field.regExp && !field.regExp.test(value)) {\r\n        error = true\r\n      }\r\n      field.error = error\r\n    }\r\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\r\n  }\r\n  checkCanSubmit = () => {\r\n    this.setState({ canSubmit: !this.state.formStatus.some((field) => field.error) })\r\n  }\r\n\r\n  // 新增\r\n  handleCreate = (back) => {\r\n    this.setState({ loading: true }, () => {\r\n      this.customerAPI\r\n        .addCustomerData(this.state.formData)\r\n        .then((response) => {\r\n          if (response.code === 0) {\r\n            message.success('成功新增資料')\r\n            if (back) {\r\n              this.history.push('/Basic/Customer')\r\n            } else {\r\n              const layoutContent = document.getElementById('layout-content-wrapper')\r\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\r\n              this.setState({\r\n                loading: false,\r\n                formData: { ...initData },\r\n                formStatus: JSON.parse(JSON.stringify(formRules)),\r\n                canSubmit: false\r\n              })\r\n            }\r\n          } else {\r\n            Modal.error({\r\n              title: response.message,\r\n              icon: <ExclamationCircleOutlined />,\r\n              okText: '確認',\r\n              cancelText: null,\r\n              onOk: () => {\r\n                this.setState({ loading: false })\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.response.data.message)\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n  // 修改\r\n  handleSubmit = (back) => {\r\n    this.setState({ loading: true }, () => {\r\n      this.customerAPI\r\n        .updateCustomerData(this.props.customerId, this.state.formData)\r\n        .then((response) => {\r\n          if (response.code === 0) {\r\n            message.success('成功更新資料')\r\n            if (back) {\r\n              this.history.push('/Basic/Customer')\r\n            } else {\r\n              const layoutContent = document.getElementById('layout-content-wrapper')\r\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\r\n              this.getCustomerData()\r\n            }\r\n          } else {\r\n            Modal.error({\r\n              title: response.message,\r\n              icon: <ExclamationCircleOutlined />,\r\n              content: response.data.map((tip, index) => (\r\n                <>\r\n                  {index > 0 && <br />}\r\n                  {tip.split(': ')[1]}\r\n                </>\r\n              )),\r\n              okText: '確認',\r\n              cancelText: null,\r\n              onOk: () => {\r\n                this.setState({ loading: false })\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .catch(() => {\r\n          message.error('資料更新失敗')\r\n          this.setState({ loading: false })\r\n        })\r\n    })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    Modal.confirm({\r\n      title: '變更尚未儲存，確定要離開嗎',\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: '確認',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        this.history.push('/Basic/Customer')\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const rowSetting = {\r\n      gutter: [24, 24],\r\n      type: 'flex',\r\n      align: 'middle',\r\n      style: { marginBottom: 24, marginTop: 24 }\r\n    }\r\n    const colSetting = {\r\n      xs: 24,\r\n      sm: 24,\r\n      md: 24,\r\n      lg: 8\r\n    }\r\n    return (\r\n      <>\r\n        <Breadcrumb style={{ marginBottom: 10 }}>\r\n          <Breadcrumb.Item>\r\n            <Link to='/Basic/Customer'>客戶</Link>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>{this.props.createFlag ? '新增客戶' : '修改客戶資料'}</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Spin spinning={this.state.loading}>\r\n          <Card className='form-detail-card'>\r\n            <Row {...rowSetting}>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={true}\r\n                  title='客戶代號'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.customerId}\r\n                      id='customerId'\r\n                      disabled={!this.props.createFlag}\r\n                    />\r\n                  }\r\n                  message='客戶代號為必填,長度需在10字內'\r\n                  error={this.getFormErrorStatus('customerId')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={true}\r\n                  title='客戶名稱'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.name}\r\n                      id='name'\r\n                    />\r\n                  }\r\n                  message='客戶名稱為必填,長度需在30字內'\r\n                  error={this.getFormErrorStatus('name')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={true}\r\n                  title='客戶簡稱'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.shortName}\r\n                      id='shortName'\r\n                    />\r\n                  }\r\n                  message='客戶簡稱為必填,長度需在10字內'\r\n                  error={this.getFormErrorStatus('shortName')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='負責人'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.principal}\r\n                      id='principal'\r\n                    />\r\n                  }\r\n                  message='長度需在2~10字'\r\n                  error={this.getFormErrorStatus('principal')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='聯絡人'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.contactPerson}\r\n                      id='contactPerson'\r\n                    />\r\n                  }\r\n                  message='長度需在2~10字'\r\n                  error={this.getFormErrorStatus('contactPerson')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='傳真號碼'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.faxNumber}\r\n                      id='faxNumber'\r\n                    />\r\n                  }\r\n                  message='長度需在10字內'\r\n                  error={this.getFormErrorStatus('faxNumber')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='電話1'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.phone1}\r\n                      id='phone1'\r\n                    />\r\n                  }\r\n                  message='長度需在10字內'\r\n                  error={this.getFormErrorStatus('phone1')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='電話2'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.phone2}\r\n                      id='phone2'\r\n                    />\r\n                  }\r\n                  message='長度需在10字內'\r\n                  error={this.getFormErrorStatus('phone2')}\r\n                />\r\n              </Col>\r\n              <Col {...colSetting}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='行動電話'\r\n                  content={\r\n                    <Input\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.cellPhone}\r\n                      id='cellPhone'\r\n                    />\r\n                  }\r\n                  message='長度需在10字內'\r\n                  error={this.getFormErrorStatus('cellPhone')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          <Card className='form-detail-card'>\r\n            <Row {...rowSetting}>\r\n              <Col span={24}>\r\n                <FormItem\r\n                  required={false}\r\n                  title='地址'\r\n                  content={\r\n                    <>\r\n                      <Row type='flex' gutter={[10]}>\r\n                        <Col style={{ width: 120 }}>\r\n                          <Input\r\n                            onChange={this.onInputChange}\r\n                            value={this.state.formData.postCode}\r\n                            id='postCode'\r\n                            placeholder='郵遞區號'\r\n                          />\r\n                        </Col>\r\n                        <Col style={{ width: 'calc(100% - 120px)' }}>\r\n                          <Input\r\n                            onChange={this.onInputChange}\r\n                            value={this.state.formData.address}\r\n                            id='address'\r\n                            placeholder='地址'\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  message='長度需在100字內'\r\n                  error={this.getFormErrorStatus('address')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          <Card className='form-detail-card'>\r\n            <Row {...rowSetting} align='top'>\r\n              <Col span={24}>\r\n                <FormItem\r\n                  required={false}\r\n                  align='flex-start'\r\n                  title='備註1'\r\n                  content={\r\n                    <Input.TextArea\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.note1}\r\n                      id='note1'\r\n                      autoSize={{ minRows: 4, maxRows: 4 }}\r\n                    />\r\n                  }\r\n                  message='長度需在255字內'\r\n                  error={this.getFormErrorStatus('note1')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row {...rowSetting}>\r\n              <Col span={24}>\r\n                <FormItem\r\n                  required={false}\r\n                  align='flex-start'\r\n                  title='備註2'\r\n                  content={\r\n                    <Input.TextArea\r\n                      onChange={this.onInputChange}\r\n                      value={this.state.formData.note2}\r\n                      id='note2'\r\n                      autoSize={{ minRows: 4, maxRows: 4 }}\r\n                    />\r\n                  }\r\n                  message='長度需在255字內'\r\n                  error={this.getFormErrorStatus('note2')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          <div style={{ margin: '20px', textAlign: 'center' }}>\r\n            <Space>\r\n              {this.props.createFlag ? (\r\n                <>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleCreate.bind(this, true)}\r\n                  >\r\n                    儲存\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleCreate.bind(this, false)}\r\n                  >\r\n                    儲存並繼續新增\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleSubmit.bind(this, false)}\r\n                  >\r\n                    儲存\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    icon={<CheckOutlined />}\r\n                    disabled={!this.state.canSubmit}\r\n                    onClick={this.handleSubmit.bind(this, true)}\r\n                  >\r\n                    儲存並返回列表\r\n                  </Button>\r\n                </>\r\n              )}\r\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\r\n                取消\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        </Spin>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport CustomerForm from './CustomerForm'\r\n\r\nexport default class CustomerDetail extends React.Component {\r\n  render() {\r\n    return (\r\n      <CustomerForm\r\n        createFlag={this.props.createFlag}\r\n        customerId={this.props.match.params.customerId}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import { restInstance } from '../runner/rest'\n\nexport default class EmployeeAPI {\n  getEmployeeList = (data) => {\n    return restInstance('get', '/employees', data).then((response) => response.data)\n  }\n\n  getEmployeeData = (employeeId) => {\n    return restInstance('get', `/employees/${employeeId}`).then((response) => response.data)\n  }\n\n  addEmployeeData = (data) => {\n    return restInstance('post', `/employees/${data.employeeId}`, data).then((response) => response.data)\n  }\n\n  updateEmployeeData = (employeeId, data) => {\n    return restInstance('patch', `/employees/${employeeId}`, data).then((response) => response.data)\n  }\n}\n","import React from 'react'\nimport { createHashHistory } from 'history'\nimport { Button, Col, Input, Row, Select, Space, Table, Tooltip, Modal } from 'antd'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon } from '../icon/Icon'\nimport { getPaginationSetting } from '../../component/paginationSetting'\nimport EmployeeAPI from '../../model/api/employee'\n\nexport default class Customer extends React.Component {\n  history = createHashHistory()\n  employeeAPI = new EmployeeAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      search: {\n        id: 'EMPLOYEE_ID',\n        keyword: ''\n      },\n      list: [],\n      pagination: {\n        current: 1,\n        total: 0,\n        pageSize: 10,\n        position: ['bottomLeft']\n      }\n    }\n    this.getList()\n  }\n\n  getList = () => {\n    const { search, pagination } = this.state\n    const requestData = {\n      pageNum: pagination.current,\n      pageSize: pagination.pageSize,\n      queryByEnum: search.id,\n      queryKeyWord: `%${search.keyword}%`\n    }\n    this.employeeAPI\n      .getEmployeeList(requestData)\n      .then((response) => {\n        pagination.total = response.data.total\n        this.setState({ loading: false, list: response.data.list, pagination })\n      })\n      .catch(() => this.setState({ loading: false }))\n  }\n\n  // search\n  onSelectChange = (value) => {\n    const { search } = this.state\n    search.id = value\n    this.setState({ search })\n  }\n  onInputChange = (e) => {\n    const { search } = this.state\n    search.keyword = e.target.value\n    this.setState({ search })\n  }\n  handleSearch = () => {\n    this.setState({ loading: true, list: [] }, () => this.getList())\n  }\n\n  getColumns = () => {\n    const _this = this\n    const { pagination } = this.state\n    return [\n      {\n        dataIndex: 'employeeId',\n        title: '執行',\n        width: 50,\n        render: (employeeId) => (\n          <Space className='list-table-option'>\n            <Tooltip title='編輯'>\n              <Button\n                className='list-table-option-edit'\n                size='small'\n                onClick={_this.onEdit.bind(_this, employeeId)}\n              >\n                <ListEditIcon />\n              </Button>\n            </Tooltip>\n            <Tooltip title='刪除'>\n              <Button\n                className='list-table-option-delete'\n                size='small'\n                onClick={_this.handleDelete.bind(_this, employeeId)}\n              >\n                <ListDeleteIcon />\n              </Button>\n            </Tooltip>\n          </Space>\n        )\n      },\n      {\n        title: '序',\n        width: 30,\n        align: 'center',\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\n      },\n      {\n        title: '員工編號',\n        dataIndex: 'employeeId'\n      },\n      {\n        title: '姓名',\n        dataIndex: 'name'\n      },\n      {\n        title: '手機號碼',\n        dataIndex: 'cellPhone'\n      },\n      {\n        title: '市內電話',\n        dataIndex: 'phone'\n      }\n    ]\n  }\n\n  onEdit = (employeeId) => {\n    this.history.push(`/Basic/Employee/${employeeId}`)\n  }\n\n  handleDelete = (employeeId) => {\n    Modal.confirm({\n      title: '確定要刪除此筆資料嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        console.log('delete: ' + employeeId)\n      }\n    })\n  }\n\n  onPageChange = (page, pageSize) => {\n    const { pagination } = this.state\n    pagination.current = page\n    pagination.pageSize = pageSize\n    this.setState({ loading: true, list: [] }, () => this.getList())\n  }\n\n  render() {\n    return (\n      <>\n        <div className='list-header'>\n          <Row type='flex' justify='space-between'>\n            <Col>\n              <Button\n                type='primary'\n                icon={<ListAddIcon />}\n                onClick={() => this.history.push('/Basic/Employee/Add')}\n                className='list-header-add'\n              >\n                新增\n              </Button>\n            </Col>\n            <Col>\n              <Space>\n                <Select\n                  placeholder='搜尋欄位'\n                  value={this.state.search.id}\n                  onChange={this.onSelectChange}\n                >\n                  <Select.Option value='EMPLOYEE_ID'>員工編號</Select.Option>\n                  <Select.Option value='NAME'>姓名</Select.Option>\n                </Select>\n                <Input placeholder='搜尋內容' allowClear={true} onChange={this.onInputChange} />\n                <Button\n                  type='primary'\n                  icon={<ListSearchIcon />}\n                  onClick={this.handleSearch}\n                  className='list-header-search'\n                >\n                  查詢\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </div>\n        <Table\n          className='list-table-wrapper'\n          rowKey='employeeId'\n          size='small'\n          columns={this.getColumns()}\n          loading={this.state.loading}\n          dataSource={this.state.list}\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\n        />\n      </>\n    )\n  }\n}\n","export const initData = {\n  employeeId: '',\n  identityCardNumber: '',\n  name: '',\n  birthday: null,\n  address: '',\n  cellPhone: '',\n  phone: '',\n  takeOfficeDay: null,\n  education: '',\n  experience: '',\n  note: '',\n  salary: null,\n  extraBonus: null,\n  fullAttendanceBonus: null\n}\n\nexport const formRules = [\n  {\n    key: 'employeeId',\n    required: true,\n    length: [10]\n  },\n  {\n    key: 'identityCardNumber',\n    required: true,\n    length: [10]\n  },\n  {\n    key: 'name',\n    required: true,\n    length: [30]\n  },\n  {\n    key: 'address',\n    length: [100]\n  },\n  {\n    key: 'cellPhone',\n    length: [10]\n  },\n  {\n    key: 'phone',\n    length: [10]\n  },\n  {\n    key: 'education',\n    length: [10]\n  },\n  {\n    key: 'experience',\n    length: [10]\n  },\n  {\n    key: 'note',\n    length: [255]\n  }\n]\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Breadcrumb,\n  Card,\n  Col,\n  Row,\n  Input,\n  InputNumber,\n  DatePicker,\n  Button,\n  Space,\n  Modal,\n  Spin,\n  message\n} from 'antd'\nimport { FormItem } from '../../component/FormItem'\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport moment from 'moment'\nimport { createHashHistory } from 'history'\nimport { initData, formRules } from './employeeType'\n// import addressDistrict from '../../model/resource/addressDistrict.json'\nimport EmployeeAPI from '../../model/api/employee'\n\nexport default class EmployeeForm extends React.Component {\n  history = createHashHistory()\n  employeeAPI = new EmployeeAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: !props.createFlag,\n      formData: { ...initData },\n      formStatus: JSON.parse(JSON.stringify(formRules)),\n      canSubmit: false\n    }\n    if (!props.createFlag) {\n      this.getEmployeeData()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.createFlag && this.props.createFlag) {\n      this.setState({\n        loading: false,\n        formData: { ...initData },\n        formStatus: JSON.parse(JSON.stringify(formRules)),\n        canSubmit: false\n      })\n    } else if (!this.props.createFlag && prevProps.employeeId !== this.props.employeeId) {\n      this.setState(\n        {\n          loading: true,\n          formData: { ...initData },\n          formStatus: JSON.parse(JSON.stringify(formRules)),\n          canSubmit: false\n        },\n        () => this.getEmployeeData()\n      )\n    }\n  }\n\n  getEmployeeData = () => {\n    this.employeeAPI\n      .getEmployeeData(this.props.employeeId)\n      .then((response) => {\n        if (response.code === 0) {\n          this.setState(\n            {\n              loading: false,\n              formData: {\n                ...response.data,\n                birthday: moment(response.data.birthday.join('-'), 'YYYY-MM-DD').valueOf(),\n                takeOfficeDay: moment(response.data.takeOfficeDay.join('-'), 'YYYY-MM-DD').valueOf()\n              }\n            },\n            () => this.checkCanSubmit()\n          )\n        } else {\n          message.error(response.message)\n          this.history.push('/Basic/Employee')\n        }\n      })\n      .catch(() => {\n        message.error('Error!')\n        this.history.push('/Basic/Employee')\n      })\n  }\n\n  getFormErrorStatus = (key) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === key)\n    return field ? field.error : false\n  }\n\n  onInputChange = (event) => {\n    const type = event.target.getAttribute('id')\n    const text = event.target.value\n    const { formData } = this.state\n    formData[type] = text\n    this.checkData(formData, type)\n  }\n  onDateChange = (type, date) => {\n    const { formData } = this.state\n    formData[type] = moment(date).valueOf()\n    this.checkData(formData, type)\n  }\n  onNumberChange = (type, value) => {\n    const { formData } = this.state\n    formData[type] = value\n    this.checkData(formData, type)\n  }\n\n  // field validator\n  checkData = (formData, fieldKey) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === fieldKey)\n    if (field) {\n      const value = formData[fieldKey]\n      let error = false\n      if (field.required && !value) {\n        error = true\n      }\n      if (field.length && field.length.length > 0 && value) {\n        if (field.length.length === 1 && value.length > field.length[0]) {\n          error = true\n        } else if (\n          field.length.length > 1 &&\n          (value.length < field.length[0] || value.length > field.length[1])\n        ) {\n          error = true\n        }\n      }\n      if (field.regExp && !field.regExp.test(value)) {\n        error = true\n      }\n      field.error = error\n    }\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\n  }\n  checkCanSubmit = () => {\n    this.setState({ canSubmit: !this.state.formStatus.some((field) => field.error) })\n  }\n\n  // 新增\n  handleCreate = (back) => {\n    this.setState({ loading: true }, () => {\n      this.employeeAPI\n        .addEmployeeData(this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功新增資料')\n            if (back) {\n              this.history.push('/Basic/Employee')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.setState({\n                loading: false,\n                formData: { ...initData },\n                formStatus: JSON.parse(JSON.stringify(formRules)),\n                canSubmit: false\n              })\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch((error) => {\n          message.error(error.response.data.message)\n          this.setState({ loading: false })\n        })\n    })\n  }\n  // 修改\n  handleSubmit = (back) => {\n    this.setState({ loading: true }, () => {\n      this.employeeAPI\n        .updateEmployeeData(this.props.employeeId, {\n          ...this.state.formData,\n          birthday: moment(this.state.formData.birthday).format('YYYY-MM-DD'),\n          takeOfficeDay: moment(this.state.formData.takeOfficeDay).format('YYYY-MM-DD')\n        })\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功更新資料')\n            if (back) {\n              this.history.push('/Basic/Employee')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.getEmployeeData()\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              content: response.data.map((tip, index) => (\n                <>\n                  {index > 0 && <br />}\n                  {tip.split(': ')[1]}\n                </>\n              )),\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch((error) => {\n          message.error('資料更新失敗')\n          this.setState({ loading: false })\n        })\n    })\n  }\n\n  handleCancel = () => {\n    Modal.confirm({\n      title: '變更尚未儲存，確定要離開嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        this.history.push('/Basic/Employee')\n      }\n    })\n  }\n\n  render() {\n    const rowSetting = {\n      gutter: [24, 24],\n      type: 'flex',\n      align: 'middle',\n      style: { marginBottom: 24, marginTop: 24 }\n    }\n    const colSetting = {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 8\n    }\n    return (\n      <>\n        <Breadcrumb style={{ marginBottom: 10 }}>\n          <Breadcrumb.Item>\n            <Link to='/Basic/Employee'>員工</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{this.props.createFlag ? '新增員工' : '修改員工資料'}</Breadcrumb.Item>\n        </Breadcrumb>\n        <Spin spinning={this.state.loading}>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='員工編號'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.employeeId}\n                      id='employeeId'\n                      disabled={!this.props.createFlag}\n                    />\n                  }\n                  message='員工編號為必填,長度需在10字內'\n                  error={this.getFormErrorStatus('employeeId')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='身分證號'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.identityCardNumber}\n                      id='identityCardNumber'\n                    />\n                  }\n                  message='身分證號為必填,長度需在10字內'\n                  error={this.getFormErrorStatus('identityCardNumber')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='姓名'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.name}\n                      id='name'\n                    />\n                  }\n                  message='姓名為必填,長度需在30字內'\n                  error={this.getFormErrorStatus('name')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='出生年月日'\n                  content={\n                    <DatePicker\n                      onChange={this.onDateChange.bind(this, 'birthday')}\n                      value={\n                        !this.state.formData.birthday\n                          ? undefined\n                          : moment(this.state.formData.birthday)\n                      }\n                      format='YYYY-MM-DD'\n                      placeholder=''\n                      style={{ display: 'block' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='手機號碼'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.cellPhone}\n                      id='cellPhone'\n                    />\n                  }\n                  message='長度需在10字內'\n                  error={this.getFormErrorStatus('cellPhone')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='市內電話'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.phone}\n                      id='phone'\n                    />\n                  }\n                  message='長度需在10字內'\n                  error={this.getFormErrorStatus('phone')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='就職日期'\n                  content={\n                    <DatePicker\n                      onChange={this.onDateChange.bind(this, 'takeOfficeDay')}\n                      value={\n                        !this.state.formData.takeOfficeDay\n                          ? undefined\n                          : moment(this.state.formData.takeOfficeDay)\n                      }\n                      format='YYYY-MM-DD'\n                      placeholder=''\n                      style={{ display: 'block' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='學歷'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.education}\n                      id='education'\n                    />\n                  }\n                  message='長度需在10字內'\n                  error={this.getFormErrorStatus('education')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='薪資'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'salary')}\n                      value={this.state.formData.salary}\n                      min={0}\n                      max={999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='職務津貼'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'extraBonus')}\n                      value={this.state.formData.extraBonus}\n                      min={0}\n                      max={999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='全勤津貼'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'fullAttendanceBonus')}\n                      value={this.state.formData.fullAttendanceBonus}\n                      min={0}\n                      max={999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n            </Row>\n          </Card>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col span={24}>\n                <FormItem\n                  required={false}\n                  title='地址'\n                  content={\n                    <>\n                      <Row type='flex' gutter={[10]}>\n                        <Col style={{ width: 120 }}>\n                          <Input\n                            onChange={this.onInputChange}\n                            value={this.state.formData.postCode}\n                            id='postCode'\n                            placeholder='郵遞區號'\n                          />\n                        </Col>\n                        <Col style={{ width: 'calc(100% - 120px)' }}>\n                          <Input\n                            onChange={this.onInputChange}\n                            value={this.state.formData.address}\n                            id='address'\n                            placeholder='地址'\n                          />\n                        </Col>\n                      </Row>\n                    </>\n                  }\n                  message='長度需在100字內'\n                  error={this.getFormErrorStatus('address')}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting} align='top'>\n              <Col span={24}>\n                <FormItem\n                  required={false}\n                  align='flex-start'\n                  title='經歷'\n                  content={\n                    <Input.TextArea\n                      onChange={this.onInputChange}\n                      value={this.state.formData.experience}\n                      id='experience'\n                      autoSize={{ minRows: 4, maxRows: 4 }}\n                    />\n                  }\n                  message='長度需在255字內'\n                  error={this.getFormErrorStatus('experience')}\n                />\n              </Col>\n            </Row>\n            <Row {...rowSetting}>\n              <Col span={24}>\n                <FormItem\n                  required={false}\n                  align='flex-start'\n                  title='備註'\n                  content={\n                    <Input.TextArea\n                      onChange={this.onInputChange}\n                      value={this.state.formData.note}\n                      id='note'\n                      autoSize={{ minRows: 4, maxRows: 4 }}\n                    />\n                  }\n                  message='長度需在255字內'\n                  error={this.getFormErrorStatus('note')}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <div style={{ margin: '20px', textAlign: 'center' }}>\n            <Space>\n              {this.props.createFlag ? (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, true)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, false)}\n                  >\n                    儲存並繼續新增\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, false)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, true)}\n                  >\n                    儲存並返回列表\n                  </Button>\n                </>\n              )}\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\n                取消\n              </Button>\n            </Space>\n          </div>\n        </Spin>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport EmployeeForm from './EmployeeForm'\n\nexport default class EmployeeDetail extends React.Component {\n  render() {\n    return (\n      <EmployeeForm\n        createFlag={this.props.createFlag}\n        employeeId={this.props.match.params.employeeId}\n      />\n    )\n  }\n}\n","import { restInstance } from '../runner/rest'\n\nexport default class VehicleAPI {\n  getVehicleList = (data) => {\n    return restInstance('get', '/kinds', data).then((response) => response.data)\n  }\n\n  getVehicleData = (kindId) => {\n    return restInstance('get', `/kinds/${kindId}`).then((response) => response.data)\n  }\n\n  addVehicleData = (data) => {\n    return restInstance('post', `/kinds/${data.kindId}`, data).then((response) => response.data)\n  }\n\n  updateVehicleData = (kindId, data) => {\n    return restInstance('patch', `/kinds/${kindId}`, data).then((response) => response.data)\n  }\n}\n","import React from 'react'\nimport { createHashHistory } from 'history'\nimport { Button, Col, Input, Row, Space, Table, Tooltip, Modal } from 'antd'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon } from '../icon/Icon'\nimport { getPaginationSetting } from '../../component/paginationSetting'\nimport VehicleAPI from '../../model/api/vehicle'\n\nexport default class Vehicle extends React.Component {\n  history = createHashHistory()\n  vehicleAPI = new VehicleAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      search: {\n        keyword: ''\n      },\n      list: [],\n      pagination: {\n        current: 1,\n        total: 0,\n        pageSize: 10,\n        position: ['bottomLeft']\n      }\n    }\n    this.getList()\n  }\n\n  getList = () => {\n    const { search, pagination } = this.state\n    const requestData = {\n      pageNum: pagination.current,\n      pageSize: pagination.pageSize,\n      kindIdLike: `%${search.keyword}%`\n    }\n    this.vehicleAPI\n      .getVehicleList(requestData)\n      .then((response) => {\n        pagination.total = response.data.total\n        this.setState({ loading: false, list: response.data.list, pagination })\n      })\n      .catch(() => this.setState({ loading: false }))\n  }\n\n  // search\n  onInputChange = (e) => {\n    const { search } = this.state\n    search.keyword = e.target.value\n    this.setState({ search })\n  }\n  handleSearch = () => {\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  getColumns = () => {\n    const _this = this\n    const { pagination } = this.state\n    return [\n      {\n        dataIndex: 'kindId',\n        title: '執行',\n        width: 50,\n        render: (kindId) => (\n          <Space className='list-table-option'>\n            <Tooltip title='編輯'>\n              <Button\n                className='list-table-option-edit'\n                size='small'\n                onClick={_this.onEdit.bind(_this, kindId)}\n              >\n                <ListEditIcon />\n              </Button>\n            </Tooltip>\n            <Tooltip title='刪除'>\n              <Button\n                className='list-table-option-delete'\n                size='small'\n                onClick={_this.handleDelete.bind(_this, kindId)}\n              >\n                <ListDeleteIcon />\n              </Button>\n            </Tooltip>\n          </Space>\n        )\n      },\n      {\n        title: '序',\n        width: 30,\n        align: 'center',\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\n      },\n      {\n        title: '車種代號',\n        dataIndex: 'kindId'\n      },\n      {\n        title: '車種簡稱',\n        dataIndex: 'shortName'\n      },\n      {\n        title: '車種名稱',\n        dataIndex: 'name'\n      },\n      {\n        title: '車廠',\n        dataIndex: 'factory'\n      }\n    ]\n  }\n\n  onEdit = (kindId) => {\n    this.history.push(`/Parts/Vehicle/${kindId}`)\n  }\n\n  handleDelete = (kindId) => {\n    Modal.confirm({\n      title: '確定要刪除此筆資料嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        console.log('delete: ' + kindId)\n      }\n    })\n  }\n\n  onPageChange = (page, pageSize) => {\n    const { pagination } = this.state\n    pagination.current = page\n    pagination.pageSize = pageSize\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  render() {\n    return (\n      <>\n        <div className='list-header'>\n          <Row type='flex' justify='space-between'>\n            <Col>\n              <Button\n                type='primary'\n                icon={<ListAddIcon />}\n                onClick={() => this.history.push('/Parts/Vehicle/Add')}\n                className='list-header-add'\n              >\n                新增\n              </Button>\n            </Col>\n            <Col>\n              <Space>\n                <Input\n                  placeholder='搜尋車種代號'\n                  allowClear={true}\n                  onChange={this.onInputChange}\n                  style={{ width: 140 }}\n                />\n                <Button\n                  type='primary'\n                  icon={<ListSearchIcon />}\n                  onClick={this.handleSearch}\n                  className='list-header-search'\n                >\n                  查詢\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </div>\n        <Table\n          className='list-table-wrapper'\n          rowKey='vendorId'\n          size='small'\n          columns={this.getColumns()}\n          loading={this.state.loading}\n          dataSource={this.state.list}\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\n        />\n      </>\n    )\n  }\n}\n","export const initData = {\n  kindId: '',\n  name: '',\n  shortName: '',\n  factory: ''\n}\n\nexport const formRules = [\n  {\n    key: 'kindId',\n    required: true,\n    length: [8]\n  },\n  {\n    key: 'name',\n    required: true,\n    length: [20]\n  },\n  {\n    key: 'shortName',\n    required: true,\n    length: [15]\n  },\n  {\n    key: 'factory',\n    length: [3]\n  }\n]\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb, Card, Col, Row, Input, Button, Space, Modal, Spin, message } from 'antd'\nimport { FormItem } from '../../component/FormItem'\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport { createHashHistory } from 'history'\nimport { initData, formRules } from './vehicleType'\n// import addressDistrict from '../../model/resource/addressDistrict.json'\nimport VehicleAPI from '../../model/api/vehicle'\n\nexport default class VehicleForm extends React.Component {\n  history = createHashHistory()\n  vehicleAPI = new VehicleAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: !props.createFlag,\n      formData: { ...initData },\n      formStatus: JSON.parse(JSON.stringify(formRules)),\n      canSubmit: false\n    }\n    if (!props.createFlag) {\n      this.getVehicleData()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.createFlag && this.props.createFlag) {\n      this.setState({\n        loading: false,\n        formData: { ...initData },\n        formStatus: JSON.parse(JSON.stringify(formRules)),\n        canSubmit: false\n      })\n    } else if (!this.props.createFlag && prevProps.kindId !== this.props.kindId) {\n      this.setState(\n        {\n          loading: true,\n          formData: { ...initData },\n          formStatus: JSON.parse(JSON.stringify(formRules)),\n          canSubmit: false\n        },\n        () => this.getVehicleData()\n      )\n    }\n  }\n\n  getVehicleData = () => {\n    this.vehicleAPI\n      .getVehicleData(this.props.kindId)\n      .then((response) => {\n        if (response.code === 0) {\n          this.setState({ loading: false, formData: response.data }, () => this.checkCanSubmit())\n        } else {\n          message.error(response.message)\n          this.history.push('/Parts/Vehicle')\n        }\n      })\n      .catch(() => {\n        message.error('Error!')\n        this.history.push('/Parts/Vehicle')\n      })\n  }\n\n  getFormErrorStatus = (key) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === key)\n    return field ? field.error : false\n  }\n\n  onInputChange = (event) => {\n    const type = event.target.getAttribute('id')\n    const text = event.target.value\n    const { formData } = this.state\n    formData[type] = text\n    this.checkData(formData, type)\n  }\n\n  // field validator\n  checkData = (formData, fieldKey) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === fieldKey)\n    if (field) {\n      const value = formData[fieldKey]\n      let error = false\n      if (field.required && !value) {\n        error = true\n      }\n      if (field.length && field.length.length > 0 && value) {\n        if (field.length.length === 1 && value.length > field.length[0]) {\n          error = true\n        } else if (\n          field.length.length > 1 &&\n          (value.length < field.length[0] || value.length > field.length[1])\n        ) {\n          error = true\n        }\n      }\n      if (field.regExp && !field.regExp.test(value)) {\n        error = true\n      }\n      field.error = error\n    }\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\n  }\n  checkCanSubmit = () => {\n    this.setState({ canSubmit: !this.state.formStatus.some((field) => field.error) })\n  }\n\n  // 新增\n  handleCreate = (back) => {\n    this.setState({ loading: true }, () => {\n      this.vehicleAPI\n        .addVehicleData(this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功新增資料')\n            if (back) {\n              this.history.push('/Basic/Vehicle')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.setState({\n                loading: false,\n                formData: { ...initData },\n                formStatus: JSON.parse(JSON.stringify(formRules)),\n                canSubmit: false\n              })\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch((error) => {\n          message.error(error.response.data.message)\n          this.setState({ loading: false })\n        })\n    })\n  }\n  // 修改\n  handleSubmit = (back) => {\n    this.setState({ loading: true }, () => {\n      this.vehicleAPI\n        .updateVehicleData(this.props.kindId, this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功更新資料')\n            if (back) {\n              this.history.push('/Parts/Vehicle')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.getVehicleData()\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              content: response.data.map((tip, index) => (\n                <>\n                  {index > 0 && <br />}\n                  {tip.split(': ')[1]}\n                </>\n              )),\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch(() => {\n          message.error('資料更新失敗')\n          this.setState({ loading: false })\n        })\n    })\n  }\n\n  handleCancel = () => {\n    Modal.confirm({\n      title: '變更尚未儲存，確定要離開嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        this.history.push('/Parts/Vehicle')\n      }\n    })\n  }\n\n  render() {\n    const rowSetting = {\n      gutter: [24, 24],\n      type: 'flex',\n      align: 'middle',\n      style: { marginBottom: 24, marginTop: 24 }\n    }\n    const colSetting = {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 12\n    }\n    return (\n      <>\n        <Breadcrumb style={{ marginBottom: 10 }}>\n          <Breadcrumb.Item>\n            <Link to='/Parts/Vehicle'>車種</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{this.props.createFlag ? '新增車種' : '修改車種資料'}</Breadcrumb.Item>\n        </Breadcrumb>\n        <Spin spinning={this.state.loading}>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='車種代號'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.kindId}\n                      id='kindId'\n                      disabled={!this.props.createFlag}\n                    />\n                  }\n                  message='車種代號為必填,長度需在8字內'\n                  error={this.getFormErrorStatus('kindId')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='車種名稱'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.name}\n                      id='name'\n                    />\n                  }\n                  message='車種名稱為必填,長度需在20字'\n                  error={this.getFormErrorStatus('name')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='車種簡稱'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.shortName}\n                      id='shortName'\n                    />\n                  }\n                  message='車種簡稱為必填,長度需在15字內'\n                  error={this.getFormErrorStatus('shortName')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={false}\n                  title='車廠'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.factory}\n                      id='factory'\n                    />\n                  }\n                  message='長度需在3字內'\n                  error={this.getFormErrorStatus('factory')}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <div style={{ margin: '20px', textAlign: 'center' }}>\n            <Space>\n              {this.props.createFlag ? (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, true)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, false)}\n                  >\n                    儲存並繼續新增\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, false)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, true)}\n                  >\n                    儲存並返回列表\n                  </Button>\n                </>\n              )}\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\n                取消\n              </Button>\n            </Space>\n          </div>\n        </Spin>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport VehicleForm from './VehicleForm'\n\nexport default class VehicleDetail extends React.Component {\n  render() {\n    return (\n      <VehicleForm\n        createFlag={this.props.createFlag}\n        kindId={this.props.match.params.kindId}\n      />\n    )\n  }\n}\n","import { restInstance } from '../runner/rest'\n\nexport default class LevelAPI {\n  getLevelList = (data) => {\n    return restInstance('get', '/grades', data).then((response) => response.data)\n  }\n\n  getLevelData = (gradeId) => {\n    return restInstance('get', `/grades/${gradeId}`).then((response) => response.data)\n  }\n\n  addLevelData = (data) => {\n    return restInstance('post', `/grades/${data.gradeId}`, data).then((response) => response.data)\n  }\n\n  updateLevelData = (gradeId, data) => {\n    return restInstance('patch', `/grades/${gradeId}`, data).then((response) => response.data)\n  }\n}\n","import React from 'react'\nimport { createHashHistory } from 'history'\nimport { Button, Col, Input, Row, Space, Table, Tooltip, Modal } from 'antd'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon } from '../icon/Icon'\nimport { getPaginationSetting } from '../../component/paginationSetting'\nimport LevelAPI from '../../model/api/level'\n\nexport default class Level extends React.Component {\n  history = createHashHistory()\n  levelAPI = new LevelAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      search: {\n        keyword: ''\n      },\n      list: [],\n      pagination: {\n        current: 1,\n        total: 0,\n        pageSize: 10,\n        position: ['bottomLeft']\n      }\n    }\n    this.getList()\n  }\n\n  getList = () => {\n    const { search, pagination } = this.state\n    const requestData = {\n      pageNum: pagination.current,\n      pageSize: pagination.pageSize,\n      gradeId: `%${search.keyword}%`\n    }\n    this.levelAPI\n      .getLevelList(requestData)\n      .then((response) => {\n        pagination.total = response.data.total\n        this.setState({ loading: false, list: response.data.list, pagination })\n      })\n      .catch(() => this.setState({ loading: false }))\n  }\n\n  // search\n  onInputChange = (e) => {\n    const { search } = this.state\n    search.keyword = e.target.value\n    this.setState({ search })\n  }\n  handleSearch = () => {\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  getColumns = () => {\n    const _this = this\n    const { pagination } = this.state\n    return [\n      {\n        dataIndex: 'gradeId',\n        title: '執行',\n        width: 50,\n        render: (gradeId) => (\n          <Space className='list-table-option'>\n            <Tooltip title='編輯'>\n              <Button\n                className='list-table-option-edit'\n                size='small'\n                onClick={_this.onEdit.bind(_this, gradeId)}\n              >\n                <ListEditIcon />\n              </Button>\n            </Tooltip>\n            <Tooltip title='刪除'>\n              <Button\n                className='list-table-option-delete'\n                size='small'\n                onClick={_this.handleDelete.bind(_this, gradeId)}\n              >\n                <ListDeleteIcon />\n              </Button>\n            </Tooltip>\n          </Space>\n        )\n      },\n      {\n        title: '序',\n        width: 30,\n        align: 'center',\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\n      },\n      {\n        title: '等級代號',\n        dataIndex: 'gradeId'\n      },\n      {\n        title: '等級名稱',\n        dataIndex: 'name'\n      }\n    ]\n  }\n\n  onEdit = (gradeId) => {\n    this.history.push(`/Parts/Level/${gradeId}`)\n  }\n\n  handleDelete = (gradeId) => {\n    Modal.confirm({\n      title: '確定要刪除此筆資料嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        console.log('delete: ' + gradeId)\n      }\n    })\n  }\n\n  onPageChange = (page, pageSize) => {\n    const { pagination } = this.state\n    pagination.current = page\n    pagination.pageSize = pageSize\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  render() {\n    return (\n      <>\n        <div className='list-header'>\n          <Row type='flex' justify='space-between'>\n            <Col>\n              <Button\n                type='primary'\n                icon={<ListAddIcon />}\n                onClick={() => this.history.push('/Parts/Level/Add')}\n                className='list-header-add'\n              >\n                新增\n              </Button>\n            </Col>\n            <Col>\n              <Space>\n                <Input\n                  placeholder='搜尋等級代號'\n                  allowClear={true}\n                  onChange={this.onInputChange}\n                  style={{ width: 140 }}\n                />\n                <Button\n                  type='primary'\n                  icon={<ListSearchIcon />}\n                  onClick={this.handleSearch}\n                  className='list-header-search'\n                >\n                  查詢\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </div>\n        <Table\n          className='list-table-wrapper'\n          rowKey='vendorId'\n          size='small'\n          columns={this.getColumns()}\n          loading={this.state.loading}\n          dataSource={this.state.list}\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\n        />\n      </>\n    )\n  }\n}\n","export const initData = {\n  gradeId: '',\n  name: ''\n}\n\nexport const formRules = [\n  {\n    key: 'gradeId',\n    required: true,\n    length: [2]\n  },\n  {\n    key: 'name',\n    required: true,\n    length: [10]\n  }\n]\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb, Card, Col, Row, Input, Button, Space, Modal, Spin, message } from 'antd'\nimport { FormItem } from '../../component/FormItem'\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport { createHashHistory } from 'history'\nimport { initData, formRules } from './levelType'\n// import addressDistrict from '../../model/resource/addressDistrict.json'\nimport LevelAPI from '../../model/api/level'\n\nexport default class LevelForm extends React.Component {\n  history = createHashHistory()\n  levelAPI = new LevelAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: !props.createFlag,\n      formData: { ...initData },\n      formStatus: JSON.parse(JSON.stringify(formRules)),\n      canSubmit: false\n    }\n    if (!props.createFlag) {\n      this.getLevelData()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.createFlag && this.props.createFlag) {\n      this.setState({\n        loading: false,\n        formData: { ...initData },\n        formStatus: JSON.parse(JSON.stringify(formRules)),\n        canSubmit: false\n      })\n    } else if (!this.props.createFlag && prevProps.gradeId !== this.props.gradeId) {\n      this.setState(\n        {\n          loading: true,\n          formData: { ...initData },\n          formStatus: JSON.parse(JSON.stringify(formRules)),\n          canSubmit: false\n        },\n        () => this.getLevelData()\n      )\n    }\n  }\n\n  getLevelData = () => {\n    this.levelAPI\n      .getLevelData(this.props.gradeId)\n      .then((response) => {\n        if (response.code === 0) {\n          this.setState({ loading: false, formData: response.data }, () => this.checkCanSubmit())\n        } else {\n          message.error(response.message)\n          this.history.push('/Parts/Level')\n        }\n      })\n      .catch(() => {\n        message.error('Error!')\n        this.history.push('/Parts/Level')\n      })\n  }\n\n  getFormErrorStatus = (key) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === key)\n    return field ? field.error : false\n  }\n\n  onInputChange = (event) => {\n    const type = event.target.getAttribute('id')\n    const text = event.target.value\n    const { formData } = this.state\n    formData[type] = text\n    this.checkData(formData, type)\n  }\n\n  // field validator\n  checkData = (formData, fieldKey) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === fieldKey)\n    if (field) {\n      const value = formData[fieldKey]\n      let error = false\n      if (field.required && !value) {\n        error = true\n      }\n      if (field.length && field.length.length > 0 && value) {\n        if (field.length.length === 1 && value.length > field.length[0]) {\n          error = true\n        } else if (\n          field.length.length > 1 &&\n          (value.length < field.length[0] || value.length > field.length[1])\n        ) {\n          error = true\n        }\n      }\n      if (field.regExp && !field.regExp.test(value)) {\n        error = true\n      }\n      field.error = error\n    }\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\n  }\n  checkCanSubmit = () => {\n    this.setState({ canSubmit: !this.state.formStatus.some((field) => field.error) })\n  }\n\n  // 新增\n  handleCreate = (back) => {\n    this.setState({ loading: true }, () => {\n      this.levelAPI\n        .addLevelData(this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功新增資料')\n            if (back) {\n              this.history.push('/Basic/Level')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.setState({\n                loading: false,\n                formData: { ...initData },\n                formStatus: JSON.parse(JSON.stringify(formRules)),\n                canSubmit: false\n              })\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch((error) => {\n          message.error(error.response.data.message)\n          this.setState({ loading: false })\n        })\n    })\n  }\n  // 修改\n  handleSubmit = (back) => {\n    this.setState({ loading: true }, () => {\n      this.levelAPI\n        .updateLevelData(this.props.gradeId, this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功更新資料')\n            if (back) {\n              this.history.push('/Parts/Level')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.getLevelData()\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              content: response.data.map((tip, index) => (\n                <>\n                  {index > 0 && <br />}\n                  {tip.split(': ')[1]}\n                </>\n              )),\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch(() => {\n          message.error('資料更新失敗')\n          this.setState({ loading: false })\n        })\n    })\n  }\n\n  handleCancel = () => {\n    Modal.confirm({\n      title: '變更尚未儲存，確定要離開嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        this.history.push('/Parts/Level')\n      }\n    })\n  }\n\n  render() {\n    const rowSetting = {\n      gutter: [24, 24],\n      type: 'flex',\n      align: 'middle',\n      style: { marginBottom: 24, marginTop: 24 }\n    }\n    const colSetting = {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 12\n    }\n    return (\n      <>\n        <Breadcrumb style={{ marginBottom: 10 }}>\n          <Breadcrumb.Item>\n            <Link to='/Parts/Level'>等級</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{this.props.createFlag ? '新增等級' : '修改等級資料'}</Breadcrumb.Item>\n        </Breadcrumb>\n        <Spin spinning={this.state.loading}>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='等級代號'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.gradeId}\n                      id='gradeId'\n                      disabled={!this.props.createFlag}\n                    />\n                  }\n                  message='等級代號為必填,長度需在2字內'\n                  error={this.getFormErrorStatus('gradeId')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='等級名稱'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.name}\n                      id='name'\n                    />\n                  }\n                  message='等級名稱為必填,長度需在10字'\n                  error={this.getFormErrorStatus('name')}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <div style={{ margin: '20px', textAlign: 'center' }}>\n            <Space>\n              {this.props.createFlag ? (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, true)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, false)}\n                  >\n                    儲存並繼續新增\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, false)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, true)}\n                  >\n                    儲存並返回列表\n                  </Button>\n                </>\n              )}\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\n                取消\n              </Button>\n            </Space>\n          </div>\n        </Spin>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport LevelForm from './LevelForm'\n\nexport default class LevelDetail extends React.Component {\n  render() {\n    return (\n      <LevelForm\n        createFlag={this.props.createFlag}\n        gradeId={this.props.match.params.gradeId}\n      />\n    )\n  }\n}\n","import { restInstance } from '../runner/rest'\n\nexport default class ColourAPI {\n  getColourList = (data) => {\n    return restInstance('get', '/colors', data).then((response) => response.data)\n  }\n\n  getColourData = (colorId) => {\n    return restInstance('get', `/colors/${colorId}`).then((response) => response.data)\n  }\n\n  addColourData = (data) => {\n    return restInstance('post', `/colors/${data.colorId}`, data).then((response) => response.data)\n  }\n\n  updateColourData = (colorId, data) => {\n    return restInstance('patch', `/colors/${colorId}`, data).then((response) => response.data)\n  }\n}\n","import React from 'react'\nimport { createHashHistory } from 'history'\nimport { Button, Col, Input, Row, Space, Table, Tooltip, Modal } from 'antd'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon } from '../icon/Icon'\nimport { getPaginationSetting } from '../../component/paginationSetting'\nimport ColourAPI from '../../model/api/colour'\n\nexport default class Colour extends React.Component {\n  history = createHashHistory()\n  colourAPI = new ColourAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      search: {\n        keyword: ''\n      },\n      list: [],\n      pagination: {\n        current: 1,\n        total: 0,\n        pageSize: 10,\n        position: ['bottomLeft']\n      }\n    }\n    this.getList()\n  }\n\n  getList = () => {\n    const { search, pagination } = this.state\n    const requestData = {\n      pageNum: pagination.current,\n      pageSize: pagination.pageSize,\n      colorId: `%${search.keyword}%`\n    }\n    this.colourAPI\n      .getColourList(requestData)\n      .then((response) => {\n        pagination.total = response.data.total\n        this.setState({ loading: false, list: response.data.list, pagination })\n      })\n      .catch(() => this.setState({ loading: false }))\n  }\n\n  // search\n  onInputChange = (e) => {\n    const { search } = this.state\n    search.keyword = e.target.value\n    this.setState({ search })\n  }\n  handleSearch = () => {\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  getColumns = () => {\n    const _this = this\n    const { pagination } = this.state\n    return [\n      {\n        dataIndex: 'colorId',\n        title: '執行',\n        width: 50,\n        render: (colorId) => (\n          <Space className='list-table-option'>\n            <Tooltip title='編輯'>\n              <Button\n                className='list-table-option-edit'\n                size='small'\n                onClick={_this.onEdit.bind(_this, colorId)}\n              >\n                <ListEditIcon />\n              </Button>\n            </Tooltip>\n            <Tooltip title='刪除'>\n              <Button\n                className='list-table-option-delete'\n                size='small'\n                onClick={_this.handleDelete.bind(_this, colorId)}\n              >\n                <ListDeleteIcon />\n              </Button>\n            </Tooltip>\n          </Space>\n        )\n      },\n      {\n        title: '序',\n        width: 30,\n        align: 'center',\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\n      },\n      {\n        title: '顏色代號',\n        dataIndex: 'colorId'\n      },\n      {\n        title: '顏色名稱',\n        dataIndex: 'name'\n      }\n    ]\n  }\n\n  onEdit = (colorId) => {\n    this.history.push(`/Parts/Colour/${colorId}`)\n  }\n\n  handleDelete = (colorId) => {\n    Modal.confirm({\n      title: '確定要刪除此筆資料嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        console.log('delete: ' + colorId)\n      }\n    })\n  }\n\n  onPageChange = (page, pageSize) => {\n    const { pagination } = this.state\n    pagination.current = page\n    pagination.pageSize = pageSize\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  render() {\n    return (\n      <>\n        <div className='list-header'>\n          <Row type='flex' justify='space-between'>\n            <Col>\n              <Button\n                type='primary'\n                icon={<ListAddIcon />}\n                onClick={() => this.history.push('/Parts/Colour/Add')}\n                className='list-header-add'\n              >\n                新增\n              </Button>\n            </Col>\n            <Col>\n              <Space>\n                <Input\n                  placeholder='搜尋顏色代號'\n                  allowClear={true}\n                  onChange={this.onInputChange}\n                  style={{ width: 140 }}\n                />\n                <Button\n                  type='primary'\n                  icon={<ListSearchIcon />}\n                  onClick={this.handleSearch}\n                  className='list-header-search'\n                >\n                  查詢\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </div>\n        <Table\n          className='list-table-wrapper'\n          rowKey='vendorId'\n          size='small'\n          columns={this.getColumns()}\n          loading={this.state.loading}\n          dataSource={this.state.list}\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\n        />\n      </>\n    )\n  }\n}\n","export const initData = {\n  colorId: '',\n  name: ''\n}\n\nexport const formRules = [\n  {\n    key: 'colorId',\n    required: true,\n    length: [2]\n  },\n  {\n    key: 'name',\n    required: true,\n    length: [10]\n  }\n]\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb, Card, Col, Row, Input, Button, Space, Modal, Spin, message } from 'antd'\nimport { FormItem } from '../../component/FormItem'\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport { createHashHistory } from 'history'\nimport { initData, formRules } from './colourType'\nimport ColourAPI from '../../model/api/colour'\n\nexport default class ColourForm extends React.Component {\n  history = createHashHistory()\n  colourAPI = new ColourAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: !props.createFlag,\n      formData: { ...initData },\n      formStatus: JSON.parse(JSON.stringify(formRules)),\n      canSubmit: false\n    }\n    if (!props.createFlag) {\n      this.getColourData()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.createFlag && this.props.createFlag) {\n      this.setState({\n        loading: false,\n        formData: { ...initData },\n        formStatus: JSON.parse(JSON.stringify(formRules)),\n        canSubmit: false\n      })\n    } else if (!this.props.createFlag && prevProps.colorId !== this.props.colorId) {\n      this.setState(\n        {\n          loading: true,\n          formData: { ...initData },\n          formStatus: JSON.parse(JSON.stringify(formRules)),\n          canSubmit: false\n        },\n        () => this.getColourData()\n      )\n    }\n  }\n\n  getColourData = () => {\n    this.colourAPI\n      .getColourData(this.props.colorId)\n      .then((response) => {\n        if (response.code === 0) {\n          this.setState({ loading: false, formData: response.data }, () => this.checkCanSubmit())\n        } else {\n          message.error(response.message)\n          this.history.push('/Parts/Colour')\n        }\n      })\n      .catch(() => {\n        message.error('Error!')\n        this.history.push('/Parts/Colour')\n      })\n  }\n\n  getFormErrorStatus = (key) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === key)\n    return field ? field.error : false\n  }\n\n  onInputChange = (event) => {\n    const type = event.target.getAttribute('id')\n    const text = event.target.value\n    const { formData } = this.state\n    formData[type] = text\n    this.checkData(formData, type)\n  }\n\n  // field validator\n  checkData = (formData, fieldKey) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === fieldKey)\n    if (field) {\n      const value = formData[fieldKey]\n      let error = false\n      if (field.required && !value) {\n        error = true\n      }\n      if (field.length && field.length.length > 0 && value) {\n        if (field.length.length === 1 && value.length > field.length[0]) {\n          error = true\n        } else if (\n          field.length.length > 1 &&\n          (value.length < field.length[0] || value.length > field.length[1])\n        ) {\n          error = true\n        }\n      }\n      if (field.regExp && !field.regExp.test(value)) {\n        error = true\n      }\n      field.error = error\n    }\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\n  }\n  checkCanSubmit = () => {\n    this.setState({ canSubmit: !this.state.formStatus.some((field) => field.error) })\n  }\n\n  // 新增\n  handleCreate = (back) => {\n    this.setState({ loading: true }, () => {\n      this.levelAPI\n        .addLevelData(this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功新增資料')\n            if (back) {\n              this.history.push('/Basic/Level')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.setState({\n                loading: false,\n                formData: { ...initData },\n                formStatus: JSON.parse(JSON.stringify(formRules)),\n                canSubmit: false\n              })\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch((error) => {\n          message.error(error.response.data.message)\n          this.setState({ loading: false })\n        })\n    })\n  }\n  // 修改\n  handleSubmit = (back) => {\n    this.setState({ loading: true }, () => {\n      this.colourAPI\n        .updateColourData(this.props.colorId, this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功更新資料')\n            if (back) {\n              this.history.push('/Parts/Colour')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.getColourData()\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              content: response.data.map((tip, index) => (\n                <>\n                  {index > 0 && <br />}\n                  {tip.split(': ')[1]}\n                </>\n              )),\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch(() => {\n          message.error('資料更新失敗')\n          this.setState({ loading: false })\n        })\n    })\n  }\n\n  handleCancel = () => {\n    Modal.confirm({\n      title: '變更尚未儲存，確定要離開嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        this.history.push('/Parts/Colour')\n      }\n    })\n  }\n\n  render() {\n    const rowSetting = {\n      gutter: [24, 24],\n      type: 'flex',\n      align: 'middle',\n      style: { marginBottom: 24, marginTop: 24 }\n    }\n    const colSetting = {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 12\n    }\n    return (\n      <>\n        <Breadcrumb style={{ marginBottom: 10 }}>\n          <Breadcrumb.Item>\n            <Link to='/Parts/Colour'>顏色</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{this.props.createFlag ? '新增顏色' : '修改顏色資料'}</Breadcrumb.Item>\n        </Breadcrumb>\n        <Spin spinning={this.state.loading}>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='顏色代號'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.colorId}\n                      id='colorId'\n                      disabled={!this.props.createFlag}\n                    />\n                  }\n                  message='顏色代號為必填,長度需在2字內'\n                  error={this.getFormErrorStatus('colorId')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='顏色名稱'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.name}\n                      id='name'\n                    />\n                  }\n                  message='顏色名稱為必填,長度需在10字'\n                  error={this.getFormErrorStatus('name')}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <div style={{ margin: '20px', textAlign: 'center' }}>\n            <Space>\n              {this.props.createFlag ? (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, true)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, false)}\n                  >\n                    儲存並繼續新增\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, false)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, true)}\n                  >\n                    儲存並返回列表\n                  </Button>\n                </>\n              )}\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\n                取消\n              </Button>\n            </Space>\n          </div>\n        </Spin>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ColourForm from './ColourForm'\n\nexport default class ColourDetail extends React.Component {\n  render() {\n    return (\n      <ColourForm\n        createFlag={this.props.createFlag}\n        colorId={this.props.match.params.colorId}\n      />\n    )\n  }\n}\n","import { restInstance } from '../runner/rest'\n\nexport default class ComponentAPI {\n  getComponentList = (data) => {\n    return restInstance('get', '/parts', data).then((response) => response.data)\n  }\n\n  getComponentData = (partId) => {\n    return restInstance('get', `/parts/${partId}`).then((response) => response.data)\n  }\n\n  addComponentData = (data) => {\n    return restInstance('post', `/parts/${data.partId}`, data).then((response) => response.data)\n  }\n\n  updateComponentData = (partId, data) => {\n    return restInstance('patch', `/parts/${partId}`, data).then((response) => response.data)\n  }\n}\n","import React from 'react'\nimport { createHashHistory } from 'history'\nimport { Button, Col, Input, Row, Space, Table, Tooltip, Modal } from 'antd'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon } from '../icon/Icon'\nimport { getPaginationSetting } from '../../component/paginationSetting'\nimport ComponentAPI from '../../model/api/component'\n\nexport default class Component extends React.Component {\n  history = createHashHistory()\n  componentAPI = new ComponentAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      search: {\n        partId: '',\n        name: ''\n      },\n      list: [],\n      pagination: {\n        current: 1,\n        total: 0,\n        pageSize: 10,\n        position: ['bottomLeft']\n      }\n    }\n    this.getList()\n  }\n\n  getList = () => {\n    const { search, pagination } = this.state\n    const requestData = {\n      pageNum: pagination.current,\n      pageSize: pagination.pageSize,\n      partId: `%${search.partId}%`,\n      name: `%${search.name}%`\n    }\n    this.componentAPI\n      .getComponentList(requestData)\n      .then((response) => {\n        pagination.total = response.data.total\n        this.setState({ loading: false, list: response.data.list, pagination })\n      })\n      .catch(() => this.setState({ loading: false }))\n  }\n\n  // search\n  onInputChange = (key, e) => {\n    const { search } = this.state\n    search[key] = e.target.value\n    this.setState({ search })\n  }\n  handleSearch = () => {\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  getColumns = () => {\n    const _this = this\n    const { pagination } = this.state\n    return [\n      {\n        dataIndex: 'partId',\n        title: '執行',\n        width: 50,\n        render: (partId) => (\n          <Space className='list-table-option'>\n            <Tooltip title='編輯'>\n              <Button\n                className='list-table-option-edit'\n                size='small'\n                onClick={_this.onEdit.bind(_this, partId)}\n              >\n                <ListEditIcon />\n              </Button>\n            </Tooltip>\n            <Tooltip title='刪除'>\n              <Button\n                className='list-table-option-delete'\n                size='small'\n                onClick={_this.handleDelete.bind(_this, partId)}\n              >\n                <ListDeleteIcon />\n              </Button>\n            </Tooltip>\n          </Space>\n        )\n      },\n      {\n        title: '序',\n        width: 30,\n        align: 'center',\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\n      },\n      {\n        title: '零件代號',\n        dataIndex: 'partId'\n      },\n      {\n        title: '零件名稱',\n        dataIndex: 'name'\n      }\n    ]\n  }\n\n  onEdit = (partId) => {\n    this.history.push(`/Parts/Component/${partId}`)\n  }\n\n  handleDelete = (partId) => {\n    Modal.confirm({\n      title: '確定要刪除此筆資料嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        console.log('delete: ' + partId)\n      }\n    })\n  }\n\n  onPageChange = (page, pageSize) => {\n    const { pagination } = this.state\n    pagination.current = page\n    pagination.pageSize = pageSize\n    this.setState({ loading: true }, () => this.getList())\n  }\n\n  render() {\n    return (\n      <>\n        <div className='list-header'>\n          <Row type='flex' justify='space-between'>\n            <Col>\n              <Button\n                type='primary'\n                icon={<ListAddIcon />}\n                onClick={() => this.history.push('/Parts/Component/Add')}\n                className='list-header-add'\n              >\n                新增\n              </Button>\n            </Col>\n            <Col>\n              <Space>\n                <Input\n                  placeholder='搜尋零件代號'\n                  allowClear={true}\n                  onChange={this.onInputChange.bind(this, 'partId')}\n                  style={{ width: 140 }}\n                />\n                <Input\n                  placeholder='搜尋零件名稱'\n                  allowClear={true}\n                  onChange={this.onInputChange.bind(this, 'name')}\n                />\n                <Button\n                  type='primary'\n                  icon={<ListSearchIcon />}\n                  onClick={this.handleSearch}\n                  className='list-header-search'\n                >\n                  查詢\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </div>\n        <Table\n          className='list-table-wrapper'\n          rowKey='vendorId'\n          size='small'\n          columns={this.getColumns()}\n          loading={this.state.loading}\n          dataSource={this.state.list}\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\n        />\n      </>\n    )\n  }\n}\n","export const initData = {\n  partId: '',\n  name: ''\n}\n\nexport const formRules = [\n  {\n    key: 'partId',\n    required: true,\n    length: [4]\n  },\n  {\n    key: 'name',\n    required: true,\n    length: [10]\n  }\n]\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb, Card, Col, Row, Input, Button, Space, Modal, Spin, message } from 'antd'\nimport { FormItem } from '../../component/FormItem'\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport { createHashHistory } from 'history'\nimport { initData, formRules } from './componentType'\nimport ComponentAPI from '../../model/api/component'\n\nexport default class ComponentForm extends React.Component {\n  history = createHashHistory()\n  componentAPI = new ComponentAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: !props.createFlag,\n      formData: { ...initData },\n      formStatus: JSON.parse(JSON.stringify(formRules)),\n      canSubmit: false\n    }\n    if (!props.createFlag) {\n      this.getComponentData()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.createFlag && this.props.createFlag) {\n      this.setState({\n        loading: false,\n        formData: { ...initData },\n        formStatus: JSON.parse(JSON.stringify(formRules)),\n        canSubmit: false\n      })\n    } else if (!this.props.createFlag && prevProps.partId !== this.props.partId) {\n      this.setState(\n        {\n          loading: true,\n          formData: { ...initData },\n          formStatus: JSON.parse(JSON.stringify(formRules)),\n          canSubmit: false\n        },\n        () => this.getComponentData()\n      )\n    }\n  }\n\n  getComponentData = () => {\n    this.componentAPI\n      .getComponentData(this.props.partId)\n      .then((response) => {\n        if (response.code === 0) {\n          this.setState({ loading: false, formData: response.data }, () => this.checkCanSubmit())\n        } else {\n          message.error(response.message)\n          this.history.push('/Parts/Component')\n        }\n      })\n      .catch(() => {\n        message.error('Error!')\n        this.history.push('/Parts/Component')\n      })\n  }\n\n  getFormErrorStatus = (key) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === key)\n    return field ? field.error : false\n  }\n\n  onInputChange = (event) => {\n    const type = event.target.getAttribute('id')\n    const text = event.target.value\n    const { formData } = this.state\n    formData[type] = text\n    this.checkData(formData, type)\n  }\n\n  // field validator\n  checkData = (formData, fieldKey) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === fieldKey)\n    if (field) {\n      const value = formData[fieldKey]\n      let error = false\n      if (field.required && !value) {\n        error = true\n      }\n      if (field.length && field.length.length > 0 && value) {\n        if (field.length.length === 1 && value.length > field.length[0]) {\n          error = true\n        } else if (\n          field.length.length > 1 &&\n          (value.length < field.length[0] || value.length > field.length[1])\n        ) {\n          error = true\n        }\n      }\n      if (field.regExp && !field.regExp.test(value)) {\n        error = true\n      }\n      field.error = error\n    }\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\n  }\n  checkCanSubmit = () => {\n    this.setState({ canSubmit: !this.state.formStatus.some((field) => field.error) })\n  }\n\n  // 新增\n  handleCreate = (back) => {\n    this.setState({ loading: true }, () => {\n      this.levelAPI\n        .addLevelData(this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功新增資料')\n            if (back) {\n              this.history.push('/Basic/Level')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.setState({\n                loading: false,\n                formData: { ...initData },\n                formStatus: JSON.parse(JSON.stringify(formRules)),\n                canSubmit: false\n              })\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch((error) => {\n          message.error(error.response.data.message)\n          this.setState({ loading: false })\n        })\n    })\n  }\n  // 修改\n  handleSubmit = (back) => {\n    this.setState({ loading: true }, () => {\n      this.componentAPI\n        .updateComponentData(this.props.partId, this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功更新資料')\n            if (back) {\n              this.history.push('/Parts/Component')\n            } else {\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.getComponentData()\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              content: response.data.map((tip, index) => (\n                <>\n                  {index > 0 && <br />}\n                  {tip.split(': ')[1]}\n                </>\n              )),\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch(() => {\n          message.error('資料更新失敗')\n          this.setState({ loading: false })\n        })\n    })\n  }\n\n  handleCancel = () => {\n    Modal.confirm({\n      title: '變更尚未儲存，確定要離開嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        this.history.push('/Parts/Component')\n      }\n    })\n  }\n\n  render() {\n    const rowSetting = {\n      gutter: [24, 24],\n      type: 'flex',\n      align: 'middle',\n      style: { marginBottom: 24, marginTop: 24 }\n    }\n    const colSetting = {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 12\n    }\n    return (\n      <>\n        <Breadcrumb style={{ marginBottom: 10 }}>\n          <Breadcrumb.Item>\n            <Link to='/Parts/Component'>零件</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{this.props.createFlag ? '新增零件' : '修改零件資料'}</Breadcrumb.Item>\n        </Breadcrumb>\n        <Spin spinning={this.state.loading}>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='零件代號'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.partId}\n                      id='partId'\n                      disabled={!this.props.createFlag}\n                    />\n                  }\n                  message='零件代號為必填,長度需在4字內'\n                  error={this.getFormErrorStatus('partId')}\n                />\n              </Col>\n              <Col {...colSetting}>\n                <FormItem\n                  required={true}\n                  title='零件名稱'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.name}\n                      id='name'\n                    />\n                  }\n                  message='零件名稱為必填,長度需在10字'\n                  error={this.getFormErrorStatus('name')}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <div style={{ margin: '20px', textAlign: 'center' }}>\n            <Space>\n              {this.props.createFlag ? (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, true)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, false)}\n                  >\n                    儲存並繼續新增\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, false)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, true)}\n                  >\n                    儲存並返回列表\n                  </Button>\n                </>\n              )}\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\n                取消\n              </Button>\n            </Space>\n          </div>\n        </Spin>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ComponentForm from './ComponentForm'\n\nexport default class ComponentDetail extends React.Component {\n  render() {\n    return (\n      <ComponentForm\n        createFlag={this.props.createFlag}\n        partId={this.props.match.params.partId}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { Drawer } from 'antd'\n\nexport const PageDrawer = (props) => {\n  return <Drawer {...props} className='layout-content-drawer-wrapper'>{props.children}</Drawer>\n}\n","export default class StaticStorage {\n  static roles = []\n  static unitList = []\n\n  setRoles = (roles) => (StaticStorage.roles = roles)\n  setUnitList = (unitList) => (StaticStorage.unitList = unitList)\n}\n","import StatisStorage from '../../model/storage/static'\n\nexport const initData = {\n  seqNo: 0,\n  productId: '',\n  productType: 'REAL',\n  partId: null,\n  customCode1: '',\n  customCode2: '',\n  customCode3: '',\n  kindShortName: '',\n  unit: StatisStorage.unitList.length > 0 ? StatisStorage.unitList[0].unit : '',\n  price1: 0,\n  price2: 0,\n  price3: 0,\n  norm: '',\n  vendorProductId: '',\n  safetyStock: 0,\n  inventory: 0,\n  storingPlace: '',\n  note: ''\n}\n\nexport const formRules = [\n]\n","import { restInstance } from '../runner/rest'\n\nexport default class ProductAPI {\n  getProductList = (data) => {\n    return restInstance('get', '/products', data).then((response) => response.data)\n  }\n\n  getProductType = () => {\n    return restInstance('get', '/common/productTypes').then((response) => response.data)\n  }\n\n  getProductData = (seqNo) => {\n    return restInstance('get', `/products/${seqNo}`).then((response) => response.data)\n  }\n\n  addProductData = (data) => {\n    return restInstance('post', '/products/0', data).then((response) => response.data)\n  }\n\n  updateProductData = (data) => {\n    return restInstance('patch', `/products/${data.seqNo}`, data).then((response) => response.data)\n  }\n\n  getPartsList = () => {\n    const data = {\n      pageNum: 1,\n      pageSize: 9999,\n      partId: '',\n      name: ''\n    }\n    return restInstance('get', '/parts', data).then((response) => response.data)\n  }\n\n  getKindsList = () => {\n    const data = {\n      pageNum: 1,\n      pageSize: 9999,\n      kindIdLike: ''\n    }\n    return restInstance('get', '/kinds', data).then((response) => response.data)\n  }\n\n  getGradesList = () => {\n    const data = {\n      pageNum: 1,\n      pageSize: 9999,\n      gradeId: ''\n    }\n    return restInstance('get', '/grades', data).then((response) => response.data)\n  }\n\n  getColorsList = () => {\n    const data = {\n      pageNum: 1,\n      pageSize: 9999,\n      colorId: ''\n    }\n    return restInstance('get', '/colors', data).then((response) => response.data)\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Breadcrumb,\n  Spin,\n  Card,\n  Row,\n  Col,\n  Select,\n  Input,\n  InputNumber,\n  AutoComplete,\n  Space,\n  Button,\n  Modal,\n  message\n} from 'antd'\nimport { CheckOutlined, CloseOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport { FormItem } from '../../component/FormItem'\nimport { createHashHistory } from 'history'\nimport { initData, formRules } from './productType'\nimport ProductAPI from '../../model/api/product'\nimport StaticStorage from '../../model/storage/static'\n\nexport default class ProductForm extends React.Component {\n  history = createHashHistory()\n  productAPI = new ProductAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      productType: [],\n      formData: { ...initData },\n      formStatus: JSON.parse(JSON.stringify(formRules)),\n      search: {\n        partId: '',\n        customCode1: '',\n        customCode2: '',\n        customCode3: ''\n      },\n      partsList: [],\n      kindsList: [],\n      gradesList: [],\n      colorsList: [],\n      canSubmit: false\n    }\n    this.getInitData().then(() => {\n      if (!props.createFlag) {\n        this.getProductData().then(() => this.setState({ loading: false }))\n      } else {\n        this.setState({ loading: false })\n      }\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      (!prevProps.createFlag && this.props.createFlag) ||\n      (!prevProps.drawModeVisible && this.props.drawModeVisible) ||\n      (!this.props.createFlag && prevProps.gradeId !== this.props.gradeId)\n    ) {\n      this.setState(\n        {\n          loading: true,\n          formData: { ...initData },\n          formStatus: JSON.parse(JSON.stringify(formRules)),\n          search: {\n            partId: '',\n            customCode1: '',\n            customCode2: '',\n            customCode3: ''\n          },\n          canSubmit: false\n        },\n        () =>\n          this.getInitData().then(() => {\n            if (!this.props.createFlag) {\n              this.getProductData().then(() => this.setState({ loading: false }))\n            } else {\n              this.setState({ loading: false })\n            }\n          })\n      )\n    }\n  }\n\n  getInitData = async () => {\n    await new Promise((resolve) => {\n      this.productAPI.getProductType().then((response) => {\n        this.setState({ productType: response.data }, () => resolve(true))\n      })\n    })\n    await new Promise((resolve) => {\n      this.productAPI.getPartsList().then((response) => {\n        this.setState({ partsList: response.data.list }, () => resolve(true))\n      })\n    })\n    await new Promise((resolve) => {\n      this.productAPI.getKindsList().then((response) => {\n        this.setState({ kindsList: response.data.list }, () => resolve(true))\n      })\n    })\n    await new Promise((resolve) => {\n      this.productAPI.getGradesList().then((response) => {\n        this.setState({ gradesList: response.data.list }, () => resolve(true))\n      })\n    })\n    await new Promise((resolve) => {\n      this.productAPI.getColorsList().then((response) => {\n        this.setState({ colorsList: response.data.list }, () => resolve(true))\n      })\n    })\n  }\n\n  getProductData = () => {\n    return new Promise((resolve, reject) => {\n      this.productAPI\n        .getProductData(this.props.seqNo)\n        .then((response) => {\n          if (response.code === 0) {\n            this.setState({ formData: response.data }, () =>\n              this.checkCanSubmit().then(() => resolve(true))\n            )\n          } else {\n            reject(false)\n            message.error(response.message)\n            if (this.props.isDrawMode) {\n              this.props.onClose()\n            } else {\n              this.history.push('/Products/List')\n            }\n          }\n        })\n        .catch(() => {\n          reject(false)\n          message.error('Error!')\n          if (this.props.isDrawMode) {\n            this.props.onClose()\n          } else {\n            this.history.push('/Products/List')\n          }\n        })\n    })\n  }\n\n  getFormErrorStatus = (key) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === key)\n    return field ? field.error : false\n  }\n\n  onInputChange = (event) => {\n    const type = event.target.getAttribute('id')\n    const text = event.target.value\n    const { formData } = this.state\n    formData[type] = text\n    this.checkData(formData, type)\n  }\n  onSelectChange = (type, value) => {\n    const { formData } = this.state\n    formData[type] = value\n    this.checkData(formData, type)\n  }\n  onNumberChange = (type, value) => {\n    const { formData } = this.state\n    formData[type] = value\n    this.checkData(formData, type)\n  }\n\n  // code select\n  onCodeSearch = (key, value) => {\n    if (!value.includes(' ')) {\n      const { formData, search } = this.state\n      if (key !== 'partId') {\n        formData[key] = value.toUpperCase()\n        formData.productId = `${formData.partId}${\n          formData.customCode1 ? `-${formData.customCode1}` : ''\n        }${formData.customCode2 ? `-${formData.customCode2}` : ''}${\n          formData.customCode3 ? `-${formData.customCode3}` : ''\n        }`\n      }\n      search[key] = value.toUpperCase()\n      this.setState({ formData, search })\n    }\n  }\n  onCodeSelect = (key, value) => {\n    const { formData, search, kindsList } = this.state\n    if (key === 'partId') {\n      search.partId = ''\n    } else {\n      search[key] = value\n    }\n    formData[key] = value\n    if (key === 'customCode1') {\n      const kind = kindsList.find((kind) => kind.kindId.toLowerCase() === value.toLowerCase())\n      if (kind) formData.kindShortName = kind.shortName\n    }\n    formData.productId = `${formData.partId}${\n      formData.customCode1 ? `-${formData.customCode1}` : ''\n    }${formData.customCode2 ? `-${formData.customCode2}` : ''}${\n      formData.customCode3 ? `-${formData.customCode3}` : ''\n    }`\n    this.setState({ search }, () => this.checkData(formData, key))\n  }\n  // get code options\n  getPartOptions = () => {\n    const { formData, search, partsList } = this.state\n    return partsList\n      .filter(\n        (part) =>\n          formData.partId === part.partId ||\n          (search.partId && part.partId.toLowerCase().includes(search.partId.toLowerCase()))\n      )\n      .map((part) => {\n        return {\n          label: part.partId,\n          value: part.partId\n        }\n      })\n  }\n  getKindOptions = () => {\n    const { formData, search, kindsList } = this.state\n    const kinds = kindsList.filter(\n      (kind) =>\n        formData.kindId === kind.kindId ||\n        (search.customCode1 && kind.kindId.toLowerCase().includes(search.customCode1.toLowerCase()))\n    )\n    if (search.customCode1 && !kinds.find((kind) => kind.kindId === search.customCode1)) {\n      kinds.unshift({ kindId: search.customCode1 })\n    }\n    return kinds.map((kind) => {\n      return {\n        label: kind.kindId,\n        value: kind.kindId\n      }\n    })\n  }\n  getGradeOptions = () => {\n    const { formData, search, gradesList } = this.state\n    const grades = gradesList.filter(\n      (grade) =>\n        formData.gradeId === grade.gradeId ||\n        (search.customCode2 &&\n          grade.gradeId.toLowerCase().includes(search.customCode2.toLowerCase()))\n    )\n    if (search.customCode2 && !grades.find((grade) => grade.gradeId === search.customCode2)) {\n      grades.unshift({ gradeId: search.customCode2 })\n    }\n    return grades.map((grade) => {\n      return {\n        label: grade.gradeId,\n        value: grade.gradeId\n      }\n    })\n  }\n  getColorOptions = () => {\n    const { formData, search, colorsList } = this.state\n    const colors = colorsList.filter(\n      (color) =>\n        formData.colorId === color.colorId ||\n        (search.customCode3 &&\n          color.colorId.toLowerCase().includes(search.customCode3.toLowerCase()))\n    )\n    if (search.customCode3 && !colors.find((color) => color.colorId === search.customCode3)) {\n      colors.unshift({ colorId: search.customCode3 })\n    }\n    return colors.map((color) => {\n      return {\n        label: color.colorId,\n        value: color.colorId\n      }\n    })\n  }\n\n  // field validator\n  checkData = (formData, fieldKey) => {\n    const { formStatus } = this.state\n    const field = formStatus.find((field) => field.key === fieldKey)\n    if (field) {\n      const value = formData[fieldKey]\n      let error = false\n      if (field.required && !value) {\n        error = true\n      }\n      if (field.length && field.length.length > 0 && value) {\n        if (field.length.length === 1 && value.length > field.length[0]) {\n          error = true\n        } else if (\n          field.length.length > 1 &&\n          (value.length < field.length[0] || value.length > field.length[1])\n        ) {\n          error = true\n        }\n      }\n      if (field.regExp && !field.regExp.test(value)) {\n        error = true\n      }\n      field.error = error\n    }\n    this.setState({ formData, formStatus }, () => this.checkCanSubmit())\n  }\n  checkCanSubmit = () => {\n    return new Promise((resolve) => {\n      this.setState({ canSubmit: !this.state.formStatus.some((field) => field.error) }, () =>\n        resolve(true)\n      )\n    })\n  }\n\n  // 新增\n  handleCreate = (back) => {\n    this.setState({ loading: true }, () => {\n      this.productAPI\n        .addProductData(this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功新增資料')\n            if (back) {\n              if (this.props.isDrawMode) {\n                this.props.onClose()\n              } else {\n                this.history.push('/Products/List')\n              }\n            } else {\n              const drawerContent = document.querySelector('.ant-drawer-body')\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              if (drawerContent) drawerContent.scrollTo({ top: 0, behavior: 'smooth' })\n              if (layoutContent) layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.setState({\n                loading: false,\n                formData: { ...initData },\n                formStatus: JSON.parse(JSON.stringify(formRules)),\n                search: {\n                  partId: '',\n                  customCode1: '',\n                  customCode2: '',\n                  customCode3: ''\n                },\n                canSubmit: false\n              })\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch((error) => {\n          message.error(error.response.data.message)\n          this.setState({ loading: false })\n        })\n    })\n  }\n  // 修改\n  handleSubmit = (back) => {\n    this.setState({ loading: true }, () => {\n      this.productAPI\n        .updateProductData(this.state.formData)\n        .then((response) => {\n          if (response.code === 0) {\n            message.success('成功更新資料')\n            if (back) {\n              if (this.props.isDrawMode) {\n                this.props.onClose()\n              } else {\n                this.history.push('/Products/List')\n              }\n            } else {\n              const drawerContent = document.querySelector('.ant-drawer-body')\n              const layoutContent = document.getElementById('layout-content-wrapper')\n              if (drawerContent) drawerContent.scrollTo({ top: 0, behavior: 'smooth' })\n              if (layoutContent) layoutContent.scrollTo({ top: 0, behavior: 'smooth' })\n              this.getProductData()\n            }\n          } else {\n            Modal.error({\n              title: response.message,\n              icon: <ExclamationCircleOutlined />,\n              content: response.data.map((tip, index) => (\n                <>\n                  {index > 0 && <br />}\n                  {tip.split(': ')[1]}\n                </>\n              )),\n              okText: '確認',\n              cancelText: null,\n              onOk: () => {\n                this.setState({ loading: false })\n              }\n            })\n          }\n        })\n        .catch(() => {\n          message.error('資料更新失敗')\n          this.setState({ loading: false })\n        })\n    })\n  }\n\n  render() {\n    const rowSetting = this.props.isDrawMode\n      ? {\n          gutter: [12, 12],\n          type: 'flex',\n          align: 'middle',\n          style: { marginBottom: 12, marginTop: 12 }\n        }\n      : {\n          gutter: [24, 24],\n          type: 'flex',\n          align: 'middle',\n          style: { marginBottom: 24, marginTop: 24 }\n        }\n    const colSetting1 = this.props.isDrawMode\n      ? {\n          span: 24\n        }\n      : {\n          xs: 24,\n          sm: 24,\n          md: 24,\n          lg: 8\n        }\n    const colSetting2 = this.props.isDrawMode\n      ? {\n          span: 24\n        }\n      : {\n          xs: 24,\n          sm: 24,\n          md: 24,\n          lg: 12\n        }\n    const colSetting3 = { span: 24 }\n    const codeColSetting = {\n      xs: 24,\n      sm: 24,\n      md: 12,\n      lg: 12\n    }\n    return (\n      <>\n        {!this.props.isDrawMode && (\n          <Breadcrumb style={{ marginBottom: 10 }}>\n            <Breadcrumb.Item>\n              <Link to='/Products/List'>商品</Link>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item>{this.props.createFlag ? '新增商品' : '修改商品資料'}</Breadcrumb.Item>\n          </Breadcrumb>\n        )}\n        <Spin spinning={this.state.loading}>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col {...colSetting3}>\n                <FormItem\n                  required={false}\n                  title='商品編號'\n                  content={<Input value={this.state.formData.productId} disabled={true} />}\n                />\n              </Col>\n              <Col {...colSetting3}>\n                <FormItem\n                  required={true}\n                  title='商品種類'\n                  content={\n                    <Select\n                      value={this.state.formData.productType}\n                      onChange={this.onSelectChange.bind(this, 'productType')}\n                      disabled={!this.props.createFlag}\n                      style={{ width: '100%' }}\n                    >\n                      {this.state.productType.map((type) => (\n                        <Select.Option key={type.productType} value={type.productType}>\n                          {type.desc}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  }\n                />\n              </Col>\n              <Col {...colSetting3}>\n                <FormItem\n                  required={true}\n                  title='代碼'\n                  align='flex-start'\n                  content={\n                    <Row gutter={[12]} className='product-code-row'>\n                      <Col {...codeColSetting}>\n                        <Select\n                          placeholder='零件編號'\n                          value={this.state.formData.partId}\n                          searchValue={this.state.search.partId}\n                          showSearch={true}\n                          showArrow={false}\n                          options={this.getPartOptions()}\n                          onSearch={this.onCodeSearch.bind(this, 'partId')}\n                          onSelect={this.onCodeSelect.bind(this, 'partId')}\n                          style={{ width: '100%' }}\n                          notFoundContent={null}\n                          disabled={!this.props.createFlag}\n                        />\n                      </Col>\n                      <Col {...codeColSetting}>\n                        <AutoComplete\n                          placeholder='車種或自訂代碼1'\n                          value={this.state.formData.customCode1}\n                          options={this.getKindOptions()}\n                          onSearch={this.onCodeSearch.bind(this, 'customCode1')}\n                          onSelect={this.onCodeSelect.bind(this, 'customCode1')}\n                          style={{ width: '100%' }}\n                          notFoundContent={null}\n                          disabled={!this.props.createFlag}\n                        />\n                      </Col>\n                      <Col {...codeColSetting}>\n                        <AutoComplete\n                          placeholder='等級或自訂代碼2'\n                          value={this.state.formData.customCode2}\n                          options={this.getGradeOptions()}\n                          onSearch={this.onCodeSearch.bind(this, 'customCode2')}\n                          onSelect={this.onCodeSelect.bind(this, 'customCode2')}\n                          style={{ width: '100%' }}\n                          notFoundContent={null}\n                          disabled={!this.props.createFlag}\n                        />\n                      </Col>\n                      <Col {...codeColSetting}>\n                        <AutoComplete\n                          placeholder='顏色或自訂代碼3'\n                          value={this.state.formData.customCode3}\n                          options={this.getColorOptions()}\n                          onSearch={this.onCodeSearch.bind(this, 'customCode3')}\n                          onSelect={this.onCodeSelect.bind(this, 'customCode3')}\n                          style={{ width: '100%' }}\n                          notFoundContent={null}\n                          disabled={!this.props.createFlag}\n                        />\n                      </Col>\n                    </Row>\n                  }\n                  message='零件編號為必填'\n                  error={this.getFormErrorStatus('partId')}\n                />\n              </Col>\n              <Col {...colSetting2}>\n                <FormItem\n                  required={false}\n                  title='車種'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.kindShortName}\n                      id='kindShortName'\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting2}>\n                <FormItem\n                  required={false}\n                  title='單位'\n                  content={\n                    <Select\n                      onChange={this.onSelectChange.bind(this, 'unit')}\n                      value={this.state.formData.unit}\n                      options={StaticStorage.unitList.map((unit) => {\n                        return {\n                          label: unit.desc,\n                          value: unit.unit\n                        }\n                      })}\n                      optionFilterProp='children'\n                      style={{ width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting3}>\n                <FormItem\n                  required={true}\n                  title='商品名稱'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.name}\n                      id='name'\n                    />\n                  }\n                  message='商品名稱為必填'\n                  error={this.getFormErrorStatus('name')}\n                />\n              </Col>\n              <Col {...colSetting1}>\n                <FormItem\n                  required={true}\n                  title='定價1'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'price1')}\n                      value={this.state.formData.price1}\n                      min={0}\n                      max={99999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting1}>\n                <FormItem\n                  required={false}\n                  title='定價2'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'price2')}\n                      value={this.state.formData.price2}\n                      min={0}\n                      max={99999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting1}>\n                <FormItem\n                  required={false}\n                  title='定價3'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'price3')}\n                      value={this.state.formData.price3}\n                      min={0}\n                      max={99999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting2}>\n                <FormItem\n                  required={false}\n                  title='規格'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.norm}\n                      id='norm'\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting2}>\n                <FormItem\n                  required={false}\n                  title='原廠料號'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.vendorProductId}\n                      id='vendorProductId'\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting1}>\n                <FormItem\n                  required={false}\n                  title='安全量'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'safetyStock')}\n                      value={this.state.formData.safetyStock}\n                      min={0}\n                      max={999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting1}>\n                <FormItem\n                  required={false}\n                  title='庫存量'\n                  content={\n                    <InputNumber\n                      onChange={this.onNumberChange.bind(this, 'inventory')}\n                      value={this.state.formData.inventory}\n                      min={0}\n                      max={999999}\n                      step={1}\n                      style={{ display: 'block', width: '100%' }}\n                    />\n                  }\n                />\n              </Col>\n              <Col {...colSetting1}>\n                <FormItem\n                  required={false}\n                  title='庫存地點'\n                  content={\n                    <Input\n                      onChange={this.onInputChange}\n                      value={this.state.formData.storingPlace}\n                      id='storingPlace'\n                    />\n                  }\n                />\n              </Col>\n            </Row>\n          </Card>\n          <Card className='form-detail-card'>\n            <Row {...rowSetting}>\n              <Col span={24}>\n                <FormItem\n                  required={false}\n                  align='flex-start'\n                  title='備註'\n                  content={\n                    <Input.TextArea\n                      onChange={this.onInputChange}\n                      value={this.state.formData.note}\n                      id='note'\n                      autoSize={{ minRows: 4, maxRows: 4 }}\n                    />\n                  }\n                  message='長度需在255字內'\n                  error={this.getFormErrorStatus('note')}\n                />\n              </Col>\n            </Row>\n          </Card>\n          <div style={{ margin: '20px', textAlign: 'center' }}>\n            <Space>\n              {this.props.createFlag ? (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, true)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleCreate.bind(this, false)}\n                  >\n                    儲存並繼續新增\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, false)}\n                  >\n                    儲存\n                  </Button>\n                  <Button\n                    type='primary'\n                    icon={<CheckOutlined />}\n                    disabled={!this.state.canSubmit}\n                    onClick={this.handleSubmit.bind(this, true)}\n                  >\n                    儲存並返回列表\n                  </Button>\n                </>\n              )}\n              <Button danger icon={<CloseOutlined />} onClick={this.handleCancel}>\n                取消\n              </Button>\n            </Space>\n          </div>\n        </Spin>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ProductForm from './ProductForm'\n\nexport default class ProductDetail extends React.Component {\n  render() {\n    const seqNo = this.props.seqNo !== undefined ? this.props.seqNo : this.props.match.params.seqNo\n    return (\n      <ProductForm\n        createFlag={this.props.createFlag}\n        isDrawMode={this.props.isDrawMode}\n        drawModeVisible={this.props.drawModeVisible}\n        seqNo={seqNo}\n        onClose={this.props.onClose}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { createHashHistory } from 'history'\nimport { Button, Col, Input, Row, Space, Table, Tooltip, Modal } from 'antd'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport { ListAddIcon, ListSearchIcon, ListEditIcon, ListDeleteIcon, UtilCloseIcon } from '../icon/Icon'\nimport { PageDrawer } from '../../component/PageDrawer'\nimport { getPaginationSetting } from '../../component/paginationSetting'\nimport ProductDetail from './ProductDetail'\nimport StaticStorage from '../../model/storage/static'\nimport ProductAPI from '../../model/api/product'\n\nexport default class Product extends React.Component {\n  history = createHashHistory()\n  productAPI = new ProductAPI()\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      search: {\n        productId: '',\n        customCode1: '',\n        name: ''\n      },\n      list: [],\n      pagination: {\n        current: 1,\n        total: 0,\n        pageSize: 50,\n        position: ['bottomLeft']\n      },\n      detailCreate: true,\n      detailSeqNo: 0,\n      detailVisible: false\n    }\n    this.getList()\n  }\n\n  getList = () => {\n    const { search, pagination } = this.state\n    const requestData = {\n      pageNum: pagination.current,\n      pageSize: pagination.pageSize,\n      productId: `%${search.productId}%`,\n      name: `%${search.name}%`,\n      customCode1: `%${search.customCode1}%`\n    }\n    this.productAPI\n      .getProductList(requestData)\n      .then((response) => {\n        pagination.total = response.data.total\n        this.setState({ loading: false, list: response.data.list, pagination })\n      })\n      .catch(() => this.setState({ loading: false }))\n  }\n\n  // search\n  onInputChange = (key, e) => {\n    const { search } = this.state\n    search[key] = e.target.value\n    this.setState({ search })\n  }\n  handleSearch = () => {\n    this.setState({ loading: true, list: [] }, () => this.getList())\n  }\n\n  getColumns = () => {\n    const _this = this\n    const { pagination } = this.state\n    return [\n      {\n        dataIndex: 'seqNo',\n        title: '執行',\n        width: 50,\n        render: (seqNo) => (\n          <Space className='list-table-option'>\n            <Tooltip title='編輯'>\n              <Button\n                className='list-table-option-edit'\n                size='small'\n                onClick={_this.onDetailOpen.bind(_this, false, seqNo)}\n              >\n                <ListEditIcon />\n              </Button>\n            </Tooltip>\n            <Tooltip title='刪除'>\n              <Button\n                className='list-table-option-delete'\n                size='small'\n                onClick={_this.handleDelete.bind(_this, seqNo)}\n              >\n                <ListDeleteIcon />\n              </Button>\n            </Tooltip>\n          </Space>\n        )\n      },\n      {\n        title: '序',\n        width: 30,\n        align: 'center',\n        render: (a, b, i) => (pagination.current - 1) * pagination.pageSize + i + 1\n      },\n      {\n        title: '商品編號',\n        dataIndex: 'productId'\n      },\n      {\n        title: '車種名稱',\n        dataIndex: 'kindShortName'\n      },\n      {\n        title: '商品名稱',\n        dataIndex: 'name'\n      },\n      {\n        title: '單位',\n        dataIndex: 'unit',\n        render: (data) => {\n          const unit = StaticStorage.unitList.find((unit) => unit.unit === data)\n          return unit ? unit.desc : data\n        }\n      },\n      {\n        title: '規格',\n        dataIndex: 'norm'\n      },\n      {\n        title: '原廠料號',\n        dataIndex: 'vendorProductId'\n      },\n      {\n        title: '定價1',\n        dataIndex: 'price1',\n        align: 'right',\n        render: (data) => {\n          return `$ ${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n        }\n      },\n      {\n        title: '定價2',\n        dataIndex: 'price2',\n        align: 'right',\n        render: (data) => {\n          return `$ ${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n        }\n      },\n      {\n        title: '定價3',\n        dataIndex: 'price3',\n        align: 'right',\n        render: (data) => {\n          return `$ ${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n        }\n      },\n      {\n        title: '安全量',\n        align: 'right',\n        dataIndex: 'safetyStock'\n      },\n      {\n        title: '庫存地點',\n        dataIndex: 'storingPlace'\n      }\n    ]\n  }\n\n  onEdit = (seqNo) => {\n    console.log(seqNo)\n  }\n\n  handleDelete = (seqNo) => {\n    Modal.confirm({\n      title: '確定要刪除此筆資料嗎',\n      icon: <ExclamationCircleOutlined />,\n      okText: '確認',\n      cancelText: '取消',\n      onOk: () => {\n        console.log('delete: ' + seqNo)\n      }\n    })\n  }\n\n  onPageChange = (page, pageSize) => {\n    const { pagination } = this.state\n    pagination.current = page\n    pagination.pageSize = pageSize\n    this.setState({ loading: true, list: [] }, () => this.getList())\n  }\n\n  onDetailOpen = (detailCreate, detailSeqNo) =>\n    this.setState({ detailCreate, detailSeqNo, detailVisible: true })\n  onDetailClose = () => this.setState({ detailVisible: false })\n\n  render() {\n    return (\n      <>\n        <div className='list-header'>\n          <Row type='flex' justify='space-between'>\n            <Col>\n              <Button\n                type='primary'\n                icon={<ListAddIcon />}\n                onClick={() => this.onDetailOpen(true, 0)}\n                className='list-header-add'\n              >\n                新增\n              </Button>\n            </Col>\n            <Col>\n              <Space>\n                <Input\n                  placeholder='商品編號'\n                  allowClear={true}\n                  onChange={this.onInputChange.bind(this, 'productId')}\n                  style={{ width: 100 }}\n                />\n                <Input\n                  placeholder='自訂碼1'\n                  allowClear={true}\n                  onChange={this.onInputChange.bind(this, 'customCode1')}\n                  style={{ width: 100 }}\n                />\n                <Input\n                  placeholder='商品名稱'\n                  allowClear={true}\n                  onChange={this.onInputChange.bind(this, 'name')}\n                  style={{ width: 140 }}\n                />\n                <Button\n                  type='primary'\n                  icon={<ListSearchIcon />}\n                  onClick={this.handleSearch}\n                  className='list-header-search'\n                >\n                  查詢\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        </div>\n        <Table\n          className='list-table-wrapper'\n          rowKey='seqNo'\n          size='small'\n          columns={this.getColumns()}\n          loading={this.state.loading}\n          dataSource={this.state.list}\n          pagination={getPaginationSetting(this.state.pagination, this.onPageChange)}\n        />\n        <PageDrawer\n          width={480}\n          placement='right'\n          closeIcon={<UtilCloseIcon />}\n          title={this.state.detailCreate ? '新增商品' : '編輯商品資料'}\n          visible={this.state.detailVisible}\n          onClose={this.onDetailClose}\n        >\n          <ProductDetail\n            createFlag={this.state.detailCreate}\n            isDrawMode={true}\n            drawModeVisible={this.state.detailVisible}\n            seqNo={this.state.detailSeqNo}\n            onClose={this.onDetailClose}\n          />\n        </PageDrawer>\n      </>\n    )\n  }\n}\n","import { restInstance } from '../runner/rest'\n\nexport default class GlobalAPI {\n  getUnitList = () => {\n    return restInstance('get', '/common/units').then((response) => response.data)\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { ConfigProvider, Layout, message } from 'antd'\nimport zhTW from 'antd/lib/locale/zh_TW'\nimport { SiderSwitchIcon } from './icon/Icon'\nimport { Login } from './Login'\nimport { LayoutSider } from './layout/Sider'\nimport { LayoutHeader } from './layout/Header'\nimport { Dashboard } from './dashboard/Dashboard'\nimport Supplier from './supplier/Supplier'\nimport SupplierDetail from './supplier/SupplierDetail'\nimport Customer from './customer/Customer'\nimport CustomerDetail from './customer/CustomerDetail'\nimport Employee from './employee/Employee'\nimport EmployeeDetail from './employee/EmployeeDetail'\nimport Vehicle from './vehicle/Vehicle'\nimport VehicleDetail from './vehicle/VehicleDetail'\nimport Level from './level/Level'\nimport LevelDetail from './level/LevelDetail'\nimport Colour from './colour/Colour'\nimport ColourDetail from './colour/ColourDetail'\nimport Component from './component/Component'\nimport ComponentDetail from './component/ComponentDetail'\nimport Product from './product/Product'\nimport ProductDetail from './product/ProductDetail'\nimport StaticStorage from '../model/storage/static'\nimport GlobalAPI from '../model/api/global'\nimport { testRestInstance } from '../model/runner/rest'\n\nexport default class LayoutPage extends React.Component {\n  staticStorage = new StaticStorage()\n  globalAPI = new GlobalAPI()\n\n  constructor(props) {\n    super(props)\n    const cookies = document.cookie.split(';')\n    this.state = {\n      isLand: !cookies.find((cookie) => cookie.includes('MOTOBUY_AUTH')),\n      isAuth: false,\n      siderCollapsed: false\n    }\n    if (cookies.find((cookie) => cookie.includes('MOTOBUY_AUTH'))) {\n      testRestInstance('get', '/auth')\n        .then((response) => {\n          if (response.data.code === 0) {\n            this.getGlobalData().then(() => {\n              this.setState({ isLand: true, isAuth: true })\n            })\n          } else {\n            this.setState({ isLand: true })\n          }\n        })\n        .catch(() => this.setState({ isLand: true }))\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.clearCookie)\n  }\n  componentWillUnmount() {\n    this.clearCookie()\n  }\n\n  getGlobalData = async () => {\n    await new Promise((resolve) => {\n      this.globalAPI.getUnitList().then((response) => {\n        this.staticStorage.setUnitList(response.data)\n        resolve(true)\n      })\n    })\n  }\n\n  clearCookie = () => {\n    const cookies = document.cookie.split(';')\n    if (\n      !(\n        cookies.find((cookie) => cookie.includes('MOTOBUY_KEEP_LOGIN')) &&\n        cookies.find((cookie) => cookie.includes('MOTOBUY_KEEP_LOGIN')).split('=')[1] === 'true'\n      )\n    ) {\n      document.cookie = 'MOTOBUY_AUTH=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT'\n    }\n  }\n\n  onLogin = () => {\n    this.getGlobalData().then(() => this.setState({ isAuth: true }))\n  }\n  onLogout = () => {\n    message.success('已成功登出')\n    document.cookie = 'MOTOBUY_AUTH=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT'\n    this.setState({ isAuth: false })\n  }\n\n  render() {\n    return this.state.isLand ? (\n      this.state.isAuth ? (\n        <ConfigProvider locale={zhTW}>\n          <Layout className='layout-wrapper'>\n            <Layout.Sider\n              collapsible\n              collapsed={this.state.siderCollapsed}\n              onCollapse={(siderCollapsed) => this.setState({ siderCollapsed })}\n              trigger={<SiderSwitchIcon />}\n              className='layout-sider-wrapper'\n            >\n              <Route path='/:type?/:page?' component={LayoutSider} />\n            </Layout.Sider>\n            <Layout className='layout-main'>\n              <Layout.Header className='layout-header'>\n                <LayoutHeader onLogout={this.onLogout} />\n              </Layout.Header>\n              <Layout.Content id='layout-content-wrapper' className='layout-content-wrapper'>\n                <Switch>\n                  {/* Basic */}\n                  {/* Supplier */}\n                  <Route\n                    exact\n                    path='/Basic/Supplier/Add'\n                    render={(props) => <SupplierDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Basic/Supplier/:vendorId'\n                    render={(props) => <SupplierDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Basic/Supplier' component={Supplier} />\n                  {/* Customer */}\n                  <Route\n                    exact\n                    path='/Basic/Customer/Add'\n                    render={(props) => <CustomerDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Basic/Customer/:customerId'\n                    render={(props) => <CustomerDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Basic/Customer' component={Customer} />\n                  {/* Employee */}\n                  <Route\n                    exact\n                    path='/Basic/Employee/Add'\n                    render={(props) => <EmployeeDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Basic/Employee/:employeeId'\n                    render={(props) => <EmployeeDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Basic/Employee' component={Employee} />\n                  {/* Vehicle */}\n                  <Route\n                    exact\n                    path='/Parts/Vehicle/Add'\n                    render={(props) => <VehicleDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Parts/Vehicle/:kindId'\n                    render={(props) => <VehicleDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Parts/Vehicle' component={Vehicle} />\n                  {/* Level */}\n                  <Route\n                    exact\n                    path='/Parts/Level/Add'\n                    render={(props) => <LevelDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Parts/Level/:gradeId'\n                    render={(props) => <LevelDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Parts/Level' component={Level} />\n                  {/* Colour */}\n                  <Route\n                    exact\n                    path='/Parts/Colour/Add'\n                    render={(props) => <ColourDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Parts/Colour/:colorId'\n                    render={(props) => <ColourDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Parts/Colour' component={Colour} />\n                  {/* Component */}\n                  <Route\n                    exact\n                    path='/Parts/Component/Add'\n                    render={(props) => <ComponentDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Parts/Component/:partId'\n                    render={(props) => <ComponentDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Parts/Component' component={Component} />\n                  {/* Product */}\n                  <Route\n                    exact\n                    path='/Products/List/Add'\n                    render={(props) => <ProductDetail {...props} createFlag={true} />}\n                  />\n                  <Route\n                    exact\n                    path='/Products/List/:seqNo'\n                    render={(props) => <ProductDetail {...props} createFlag={false} />}\n                  />\n                  <Route exact path='/Products/List' component={Product} />\n                  <Route path='/' component={Dashboard} />\n                </Switch>\n              </Layout.Content>\n              <Layout.Footer className='layout-footer'>2021 &copy; Copyright</Layout.Footer>\n            </Layout>\n          </Layout>\n        </ConfigProvider>\n      ) : (\n        <ConfigProvider locale={zhTW}>\n          <Login onLogin={this.onLogin} />\n        </ConfigProvider>\n      )\n    ) : null\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals'\nimport LayoutPage from './view/LayoutPage'\n\nimport 'antd/dist/antd.css'\nimport './style/index.sass'\nimport './style/login.sass'\nimport './style/sider.sass'\nimport './style/list.sass'\nimport './style/form.sass'\nimport './style/drawer.sass'\n\nReactDOM.render(\n  <Router>\n    <Route path='/:type?/:page?/:id?' component={LayoutPage} />\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}